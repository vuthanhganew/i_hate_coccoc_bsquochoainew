function playVideo(e, t) {
    if (not_the_first_time) {
        videojs(KitesVIDEO.id).dispose();
        var i = $("<video>").attr("id", KitesVIDEO.id).addClass("video-js vjs-default-skin");
        $(".episode-player").prepend(i)
    } else not_the_first_time = !0;
    KitesVIDEO.video = videojs(KitesVIDEO.id, {
        preload: "yes",
        width: "100%",
        height: "100%"
    }), source = KitesVIDEO.SRC, KitesVIDEO.video.controls(!0), KitesVIDEO.video.src([{
        src: source,
        type: "video/mp4"
    }]), KitesVIDEO.video.q = {}, KitesVIDEO.video.q.current = KitesVIDEO.quality.current, KitesVIDEO.video.q.change = !1, KitesVIDEO.video.play(), videojs(KitesVIDEO.id).ready(function() {
        ga("kitesPlayer.send", "pageview", {
            title: document.title,
            page: KitesVIDEO.quality.current + "_" + basename(KitesVIDEO.SRC)
        }), this.on("loadstart", function() {
            KitesVIDEO.play.loadeddata = !0, loadingVideoOn()
        }), this.on("loadeddata", function() {
            KitesVIDEO.play.loadeddata = !0, loadingVideoOff(), KitesVIDEO.play.error = 0
        }), this.on("seeking", function() {
            KitesVIDEO.play.time = KitesVIDEO.video.currentTime(), loadingVideoOn()
        }), this.on("seeked", function() {
            loadingVideoOff()
        }), this.on("progress", function() {}), this.on("play", function() {
            KitesVIDEO.play.loadeddata = !1, setPlay(1, !0), basename(source) == basename($("#" + KitesVIDEO.id).find("video").attr("src")) ? KitesVIDEO.play.type = "src" : KitesVIDEO.play.type = "ads", KitesVIDEO.video.q.change = !1
        }), this.on("timeupdate", function() {
            KitesVIDEO.video.currentTime() - KitesVIDEO.play_time > 15 && (ga("kitesPlayer.send", "pageview", {
                title: document.title,
                page: KitesVIDEO.quality.current + "_" + basename(KitesVIDEO.SRC)
            }), KitesVIDEO.play_time = KitesVIDEO.video.currentTime())
        }), this.on("ended", function() {
            KitesVIDEO.play_time = 0, ga("kitesPlayer.send", "pageview", {
                title: document.title,
                page: KitesVIDEO.quality.current + "_" + basename(KitesVIDEO.SRC)
            }), "undefined" != typeof KitesVIDEO.next && "src" == KitesVIDEO.play.type && (window.location = KitesVIDEO.next), KitesVIDEO.play.time = 0
        }), this.on("pause", function() {
            ga("kitesPlayer.send", "pageview", {
                title: document.title,
                page: KitesVIDEO.quality.current + "_" + basename(KitesVIDEO.SRC)
            })
        }), this.on("error", function() {
            loadingVideoOff(), $(".vjs-error-display").show(), clearTimeout(KitesVIDEO.play.timeoutfnc), $("#" + KitesVIDEO.id).is(".vjs-ad-playing") || KitesVIDEO.play.error < 5 && (loadingVideoOn(), KitesVIDEO.play.timeoutfnc = setTimeout(function() {
                $("#" + KitesVIDEO.id).is(".vjs-error") ? (KitesVIDEO.video.load(), KitesVIDEO.video.currentTime(KitesVIDEO.play.time), KitesVIDEO.video.play(), KitesVIDEO.play.error = KitesVIDEO.play.error + 1, $(".vjs-error-display").show()) : KitesVIDEO.play.error = 0
            }, 2e3))
        }), $(document).on("click", ".vjs-error-display", function() {
            clearTimeout(KitesVIDEO.play.timeoutfnc), loadingVideoOn(), KitesVIDEO.play.timeoutfnc = setTimeout(function() {
                KitesVIDEO.video.load(), KitesVIDEO.video.currentTime(KitesVIDEO.play.time), KitesVIDEO.video.play(), $(".vjs-error-display").show()
            }, 3e3)
        })
    })
}

function setPlay(e, t) {
    _date = new Date, document.cookie = escape("playa") + "=" + escape(t) + "; expires=" + _date.getTime() + 1e3 * e + "; path=/; domain=.kites.vn"
}

function loadingVideoOn() {
    setPlay(1, !1), $(".vjs-loading-spinner").show(), $(".vjs-error-display").hide(), $("#" + KitesVIDEO.id).addClass("vjs-waiting")
}

function loadingVideoOff() {
    setPlay(1, !0), $(".vjs-error-display").hide(), $(".vjs-loading-spinner").hide(), $("#" + KitesVIDEO.id).removeClass("vjs-waiting")
}

function speedCheck() {
    var e = new Date;
    time1 = e.getTime(), $.get("//" + document.location.host + "/speed.speed?s=" + time1).done(function() {
        var e = new Date;
        _speed = e.getTime() - time1, url = KitesVIDEO.ads.tag, url = url.replace("[referrer_url]", encodeURIComponent(document.location.href)).replace("[description_url]", encodeURIComponent(document.title)).replace("[timestamp]", _date.getTime()).replace(/%20/g, "+"),
            KitesVIDEO.quality.list = KitesVIDEO.quality.list.sort(sortNumber);
            var e = Math.min.apply(null, KitesVIDEO.quality.list);
            if (KitesVIDEO.quality.list.length > 1) {
                var t = 512 / (_speed / 1e3);
                e = 200 > t ? Math.min.apply(null, KitesVIDEO.quality.list) : 600 > t && "undefined" != typeof KitesVIDEO.quality.list[1] ? KitesVIDEO.quality.list[1] : 800 > t && "undefined" != typeof KitesVIDEO.quality.list[2] ? KitesVIDEO.quality.list[2] : 2e3 > t && "undefined" != typeof KitesVIDEO.quality.list[3] ? KitesVIDEO.quality.list[3] : 3500 > t && "undefined" != typeof KitesVIDEO.quality.list[4] ? KitesVIDEO.quality.list[4] : Math.max.apply(null, KitesVIDEO.quality.list), e > 480 && (e = qualityGet(KitesVIDEO.quality.list, 480)), e === !1 && (e = Math.max.apply(null, KitesVIDEO.quality.list))
            }
            KitesVIDEO.quality.current = e > screen.width ? qualityFilter2(screen.width) : e, KitesVIDEO.SRC = KitesVIDEO.url + KitesVIDEO.quality.current + "/" + KitesVIDEO.files[0], $(".episode-player video").attr("src", KitesVIDEO.SRC), qualityCreateList(KitesVIDEO.quality.type, "undefined" != typeof KitesVIDEO.quality.type[e] ? KitesVIDEO.quality.current : qualityFilter(KitesVIDEO.quality.current), KitesVIDEO.quality.list), $(document).on("click", ".kites-quality li.vjs-menu-title", function() {
                e = $(this).attr("data-quality"), e = parseInt(e);
                var t = qualityGet(KitesVIDEO.quality.list, e),
                    i = KitesVIDEO.url + e + "/" + KitesVIDEO.files[0],
                    s = $("#" + KitesVIDEO.id).find("video").attr("src");
                s === i || $("#" + KitesVIDEO.id).is(".vjs-ad-playing") ? KitesVIDEO.SRC = s : ($(".kites-quality li").removeClass("vjs-selected"), $(this).addClass("vjs-selected"), KitesVIDEO.play.time = KitesVIDEO.video.currentTime(), KitesVIDEO.quality.current = t, KitesVIDEO.video.q.change = !0, KitesVIDEO.SRC = i, KitesVIDEO.video.ads.snapshot.src = KitesVIDEO.SRC, KitesVIDEO.video.pause(), KitesVIDEO.video.src({
                    type: "video/mp4",
                    src: KitesVIDEO.SRC
                }), KitesVIDEO.video.load(), KitesVIDEO.video.currentTime(KitesVIDEO.play.time), KitesVIDEO.video.play())
            }), playVideo(url, 0)
    })
}

function sortNumber(e, t) {
    return e - t
}

function qualityFilter(e) {
    return 144 >= e ? e = 144 : e > 144 && 230 >= e ? e = 240 : e > 230 && 350 >= e ? e = 360 : e > 350 && 470 >= e ? e = 480 : e > 470 && 710 >= e ? e = 720 : e > 710 && 1070 >= e && (e = 1080), e
}

function qualityFilter2(e) {
    return 144 >= e ? e = 144 : e > 144 && 240 >= e ? e = 240 : e > 240 && 360 >= e ? e = 360 : e > 360 && 480 >= e ? e = 480 : e > 480 && 720 >= e ? e = 720 : e > 720 && 1080 >= e && (e = 1080), e
}

function qualityGet(e, t) {
    if (result = !1, $.inArray(parseInt(t), e) > -1) result = t;
    else
        for (var i in e) i = parseInt(i), qualityFilter(e[i]) == t && (result = e[i]);
    return result
}

function qualityCreateList(e, t, i) {
    var s = $("<div/>").addClass("kites-quality vjs-menu-button vjs-control").css("display", "block"),
        a = $("<div/>").addClass("vjs-control-content"),
        n = e[t];
    $("<span/>").addClass("vjs-control-text").text(n).appendTo(a);
    var o = $("<div/>").addClass("vjs-menu"),
        l = $("<ul/>").addClass("vjs-menu-content"),
        d = 1;
    $.each(e, function(s) {
        if (d > i.length) return !1;
        var a = qualityGet(i, s);
        if (a !== !1) {
            var n = $("<li/>").addClass("vjs-menu-title").text(e[s]).attr("data-quality", a);
            s == t && n.addClass("vjs-selected"), n.prependTo(l), d++
        }
    }), l.appendTo(o), o.appendTo(a), a.appendTo(s), $("#" + KitesVIDEO.id).find(".vjs-control-bar").append(s)
}
var _date = new Date;
$(function() {
    $(document).on("contextmenu", "#kitesPlayer_html5_api", function() {
        return !1
    }), $.get("https://api.facebook.com/method/links.getStats?format=json&urls=" + KitesVIDEO.program.url).done(function(e) {
        e.length > 0 && (e = e[0], $("span.fbcount-like").html(e.like_count), $("span.fbcount-comments").html(e.commentsbox_count + e.comment_count), $("span.fbcount-share").html(e.share_count))
    }), $(window).scroll(function() {
        var e = $(".episode-player"),
            t = e.find(".video-js");
        $(window).scrollTop() > e.outerHeight() && !Kites.isTouchDevice ? t.is(".vjs-paused") || t.is(".vjs-error") || t.addClass("video-fixed") : t.removeClass("video-fixed")
    }), $(".video-fixed:before").click(function() {
        $(document).mousemove(function(e) {
            $(this).css({
                left: e.pageX + "px",
                bottom: e.pageY + "px"
            })
        })
    }), KitesVIDEO.playlist.data = [], $(".episode-slide").find("ul>li").each(function() {
        KitesVIDEO.playlist.data.push(this.id)
    }), KitesVIDEO.playlist.data.sort(), KitesVIDEO.playing = $(".episode-slide").find("ul>li.active").attr("id");
    for (var e in KitesVIDEO.playlist.data) KitesVIDEO.playlist.data[e] == KitesVIDEO.playing && "undefined" != typeof KitesVIDEO.playlist.data[parseInt(e) + 1] && (KitesVIDEO.next = KitesVIDEO.playlist.data[parseInt(e) + 1], KitesVIDEO.next = $("#" + KitesVIDEO.next).find("h4>a").attr("href"), "undefined" !== KitesVIDEO.next && (KitesVIDEO.next = "//" + window.location.host + KitesVIDEO.next));
    $(document).on("click", "li.episode", function() {
        Kites.createCookie("episode_playlist_" + KitesVIDEO.program.id, '{"page": "' + $(this).attr("data-page") + '"}', 1)
    }), $(document).on("click", ".kites-quality", function() {
        $(this).toggleClass("active")
    })
}), $(document).on("mouseup", "video", function(e) {
    1 == e.which && e.preventDefault()
});
var not_the_first_time = !1;
ga("create", "UA-51952357-7", "auto", {
    name: "kitesPlayer"
}), ga("kitesPlayer.require", "linkid", "linkid.js"), ga("kitesPlayer.require", "displayfeatures"), KitesVIDEO.play_time = 0, KitesVIDEO.play = {
    time: 0,
    error: 0,
    loadeddata: !1,
    time: 0,
    timeoutfnc: !1,
    type: "ads"
}, KitesVIDEO.id = "kitesPlayer", _log = console.log, console.error = function() {
    return ""
}, console.warn = function() {
    return ""
}, console.info = function() {
    return ""
}, console.debug = function() {
    return ""
}, console.memory = function() {
    return ""
};
var _speed = 0;
speedCheck();
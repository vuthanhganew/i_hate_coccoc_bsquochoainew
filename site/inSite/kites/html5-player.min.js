function _handleMultipleEvents(a, b, c, d) {
    vjs.arr.forEach(c, function(c) {
        a(b, c, d);
    });
}

function _logType(a, b) {
    var c, d, e;
    c = Array.prototype.slice.call(b), d = function() {}, e = window.console || {
        log: d,
        warn: d,
        error: d
    }, a ? c.unshift(a.toUpperCase() + ":") : a = "log", vjs.log.history.push(c), c.unshift("VIDEOJS:"), 
    e[a].apply ? e[a].apply(e, c) : e[a](c.join(" "));
}

function playVideo(a, b) {
    if (not_the_first_time) {
        videojs(KitesVIDEO.id).dispose();
        var c = $("<video>").attr("id", KitesVIDEO.id).addClass("video-js vjs-default-skin");
        $(".episode-player").prepend(c);
    } else not_the_first_time = !0;
    KitesVIDEO.video = videojs(KitesVIDEO.id, {
        preload: "yes",
        width: "100%",
        height: "100%"
    }), source = KitesVIDEO.SRC, KitesVIDEO.video.controls(!0), KitesVIDEO.video.src([ {
        src: source,
        type: "video/mp4"
    } ]), KitesVIDEO.video.ads(), KitesVIDEO.video.vast({
        url: a,
        skip: b || 5
    }), KitesVIDEO.video.q = {}, KitesVIDEO.video.q.current = KitesVIDEO.quality.current, 
    KitesVIDEO.video.q.change = !1, KitesVIDEO.video.play(), videojs(KitesVIDEO.id).ready(function() {
        this.on("loadstart", function() {
            KitesVIDEO.play.loadeddata = !0, loadingVideoOn();
        }), this.on("loadeddata", function() {
            KitesVIDEO.play.loadeddata = !0, loadingVideoOff(), KitesVIDEO.play.error = 0;
        }), this.on("seeking", function() {
            KitesVIDEO.play.time = KitesVIDEO.video.currentTime(), loadingVideoOn();
        }), this.on("seeked", function() {
            loadingVideoOff();
        }), this.on("progress", function() {}), this.on("play", function() {
            KitesVIDEO.play.loadeddata = !1, setPlay(1, !0), basename(source) == basename($("#" + KitesVIDEO.id).find("video").attr("src")) ? KitesVIDEO.play.type = "src" : KitesVIDEO.play.type = "ads", 
            KitesVIDEO.video.q.change = !1, gaSend("kitesPlayer");
        }), this.on("timeupdate", function() {
            KitesVIDEO.video.currentTime() - KitesVIDEO.play_time > 60 && (gaSend("kitesPlayer"), 
            KitesVIDEO.play_time = KitesVIDEO.video.currentTime());
        }), this.on("ended", function() {
            KitesVIDEO.play_time = 0, "undefined" != typeof KitesVIDEO.next && "src" == KitesVIDEO.play.type && (window.location = KitesVIDEO.next), 
            KitesVIDEO.play.time = 0;
        }), this.on("pause", function() {}), this.on("error", function() {
            loadingVideoOff(), $(".vjs-error-display").show(), clearTimeout(KitesVIDEO.play.timeoutfnc), 
            $("#" + KitesVIDEO.id).is(".vjs-ad-playing") || KitesVIDEO.play.error < 5 && (loadingVideoOn(), 
            KitesVIDEO.play.timeoutfnc = setTimeout(function() {
                $("#" + KitesVIDEO.id).is(".vjs-error") ? (KitesVIDEO.video.load(), KitesVIDEO.video.currentTime(KitesVIDEO.play.time), 
                !$("#" + KitesVIDEO.id).is(".vjs-ad-playing") && KitesVIDEO.video.play(), KitesVIDEO.play.error = KitesVIDEO.play.error + 1, 
                $(".vjs-error-display").show()) : KitesVIDEO.play.error = 0;
            }, 2e3));
        }), $(document).on("click", ".vjs-error-display", function() {
            clearTimeout(KitesVIDEO.play.timeoutfnc), loadingVideoOn(), KitesVIDEO.play.timeoutfnc = setTimeout(function() {
                KitesVIDEO.video.load(), KitesVIDEO.video.currentTime(KitesVIDEO.play.time), !$("#" + KitesVIDEO.id).is(".vjs-ad-playing") && KitesVIDEO.video.play(), 
                $(".vjs-error-display").show();
            }, 3e3);
        });
    });
}

function gaSend(a) {
    return "src" != KitesVIDEO.play.type ? !1 : void ga(a + ".send", "pageview", {
        title: document.title,
        page: KitesVIDEO.quality.current + "_" + basename(KitesVIDEO.SRC)
    });
}

function setPlay(a, b) {
    _date = new Date(), document.cookie = escape("playa") + "=" + escape(b) + "; expires=" + _date.getTime() + 1e3 * a + "; path=/; domain=.kites.vn";
}

function loadingVideoOn() {
    setPlay(1, !1), $(".vjs-loading-spinner").show(), $(".vjs-error-display").hide(), 
    $("#" + KitesVIDEO.id).addClass("vjs-waiting");
}

function loadingVideoOff() {
    setPlay(1, !0), $(".vjs-error-display").hide(), $(".vjs-loading-spinner").hide(), 
    $("#" + KitesVIDEO.id).removeClass("vjs-waiting");
}

function speedCheck() {
    var a = new Date();
    time1 = a.getTime(), $.get("//" + document.location.host + "/speed/16KB.speed?s=" + time1).done(function() {
        _speed = new Date().getTime() - time1, url = KitesVIDEO.ads.tag, url = url.replace("[referrer_url]", encodeURIComponent(document.location.href)).replace("[description_url]", encodeURIComponent(document.title)).replace("[timestamp]", "").replace(/%20/g, "+"), 
        KitesVIDEO.quality.list = KitesVIDEO.quality.list.sort(sortNumber);
            var a = Math.min.apply(null, KitesVIDEO.quality.list);
            if (KitesVIDEO.quality.list.length > 1) {
                var b = 16 / (_speed / 1e3 / 12);
                a = 200 > b ? Math.min.apply(null, KitesVIDEO.quality.list) : 600 > b && "undefined" != typeof KitesVIDEO.quality.list[1] ? KitesVIDEO.quality.list[1] : 800 > b && "undefined" != typeof KitesVIDEO.quality.list[2] ? KitesVIDEO.quality.list[2] : 2e3 > b && "undefined" != typeof KitesVIDEO.quality.list[3] ? KitesVIDEO.quality.list[3] : 3500 > b && "undefined" != typeof KitesVIDEO.quality.list[4] ? KitesVIDEO.quality.list[4] : Math.max.apply(null, KitesVIDEO.quality.list), 
                a > 480 && (a = qualityGet(KitesVIDEO.quality.list, 480)), a === !1 && (a = Math.max.apply(null, KitesVIDEO.quality.list));
            }
            KitesVIDEO.quality.current = a > screen.width ? qualityFilter2(screen.width) : a, 
            KitesVIDEO.SRC = KitesVIDEO.url + KitesVIDEO.quality.current + "/" + KitesVIDEO.files[0], 
            $(".episode-player video").attr("src", KitesVIDEO.SRC), qualityCreateList(KitesVIDEO.quality.type, "undefined" != typeof KitesVIDEO.quality.type[a] ? KitesVIDEO.quality.current : qualityFilter(KitesVIDEO.quality.current), KitesVIDEO.quality.list), 
            $(document).on("click", ".kites-quality li.vjs-menu-title", function() {
                a = $(this).attr("data-quality"), a = parseInt(a);
                var b = qualityGet(KitesVIDEO.quality.list, a), c = KitesVIDEO.url + a + "/" + KitesVIDEO.files[0], d = $("#" + KitesVIDEO.id).find("video").attr("src");
                d === c || $("#" + KitesVIDEO.id).is(".vjs-ad-playing") ? KitesVIDEO.SRC = d : ($(".kites-quality li").removeClass("vjs-selected"), 
                $(this).addClass("vjs-selected"), KitesVIDEO.play.time = KitesVIDEO.video.currentTime(), 
                KitesVIDEO.quality.current = b, KitesVIDEO.video.q.change = !0, KitesVIDEO.SRC = c, 
                KitesVIDEO.video.ads.snapshot.src = KitesVIDEO.SRC, KitesVIDEO.video.pause(), KitesVIDEO.video.src({
                    type: "video/mp4",
                    src: KitesVIDEO.SRC
                }), KitesVIDEO.video.load(), KitesVIDEO.video.currentTime(KitesVIDEO.play.time), 
                KitesVIDEO.video.play());
            }), playVideo(url + _date.getTime(), 0);
    });
}

function sortNumber(a, b) {
    return a - b;
}

function qualityFilter(a) {
    return 144 >= a ? a = 144 : a > 144 && 230 >= a ? a = 240 : a > 230 && 350 >= a ? a = 360 : a > 350 && 470 >= a ? a = 480 : a > 470 && 710 >= a ? a = 720 : a > 710 && 1070 >= a && (a = 1080), 
    a;
}

function qualityFilter2(a) {
    return 144 >= a ? a = 144 : a > 144 && 240 >= a ? a = 240 : a > 240 && 360 >= a ? a = 360 : a > 360 && 480 >= a ? a = 480 : a > 480 && 720 >= a ? a = 720 : a > 720 && 1080 >= a && (a = 1080), 
    a;
}

function qualityGet(a, b) {
    if (result = !1, $.inArray(parseInt(b), a) > -1) result = b; else for (var c in a) c = parseInt(c), 
    qualityFilter(a[c]) == b && (result = a[c]);
    return result;
}

function qualityCreateList(a, b, c) {
    var d = $("<div/>").addClass("kites-quality vjs-menu-button vjs-control").css("display", "block"), e = $("<div/>").addClass("vjs-control-content"), f = a[b];
    $("<span/>").addClass("vjs-control-text").text(f).appendTo(e);
    var g = $("<div/>").addClass("vjs-menu"), h = $("<ul/>").addClass("vjs-menu-content"), i = 1;
    $.each(a, function(d) {
        if (i > c.length) return !1;
        var e = qualityGet(c, d);
        if (e !== !1) {
            var f = $("<li/>").addClass("vjs-menu-title").text(a[d]).attr("data-quality", e);
            d == b && f.addClass("vjs-selected"), f.prependTo(h), i++;
        }
    }), h.appendTo(g), g.appendTo(e), e.appendTo(d), $("#" + KitesVIDEO.id).find(".vjs-control-bar").append(d);
}

document.createElement("video"), document.createElement("audio"), document.createElement("track");

var vjs = function(a, b, c) {
    var d;
    if ("string" == typeof a) {
        if (0 === a.indexOf("#") && (a = a.slice(1)), vjs.players[a]) return vjs.players[a];
        d = vjs.el(a);
    } else d = a;
    if (!d || !d.nodeName) throw new TypeError("The element or ID supplied is not valid. (videojs)");
    return d.player || new vjs.Player(d, b, c);
}, videojs = window.videojs = vjs;

vjs.CDN_VERSION = "4.11", vjs.ACCESS_PROTOCOL = "https:" == document.location.protocol ? "https://" : "http://", 
vjs.options = {
    techOrder: [ "html5", "flash" ],
    html5: {},
    flash: {},
    width: 300,
    height: 150,
    defaultVolume: 0,
    playbackRates: [],
    inactivityTimeout: 2e3,
    children: {
        mediaLoader: {},
        posterImage: {},
        textTrackDisplay: {},
        loadingSpinner: {},
        bigPlayButton: {},
        controlBar: {},
        errorDisplay: {}
    },
    language: document.getElementsByTagName("html")[0].getAttribute("lang") || navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language || "en",
    languages: {},
    notSupportedMessage: "No compatible source was found for this video."
}, "GENERATED_CDN_VSN" !== vjs.CDN_VERSION && (videojs.options.flash.swf = vjs.ACCESS_PROTOCOL + "skin.kites.vn/library/video-js/video-js.swf"), 
vjs.addLanguage = function(a, b) {
    return void 0 !== vjs.options.languages[a] ? vjs.options.languages[a] = vjs.util.mergeOptions(vjs.options.languages[a], b) : vjs.options.languages[a] = b, 
    vjs.options.languages;
}, vjs.players = {}, "function" == typeof define && define.amd ? define([], function() {
    return videojs;
}) : "object" == typeof exports && "object" == typeof module && (module.exports = videojs), 
vjs.CoreObject = vjs.CoreObject = function() {}, vjs.CoreObject.extend = function(a) {
    var b, c;
    a = a || {}, b = a.init || a.init || this.prototype.init || this.prototype.init || function() {}, 
    c = function() {
        b.apply(this, arguments);
    }, c.prototype = vjs.obj.create(this.prototype), c.prototype.constructor = c, c.extend = vjs.CoreObject.extend, 
    c.create = vjs.CoreObject.create;
    for (var d in a) a.hasOwnProperty(d) && (c.prototype[d] = a[d]);
    return c;
}, vjs.CoreObject.create = function() {
    var a = vjs.obj.create(this.prototype);
    return this.apply(a, arguments), a;
}, vjs.on = function(a, b, c) {
    if (vjs.obj.isArray(b)) return _handleMultipleEvents(vjs.on, a, b, c);
    var d = vjs.getData(a);
    d.handlers || (d.handlers = {}), d.handlers[b] || (d.handlers[b] = []), c.guid || (c.guid = vjs.guid++), 
    d.handlers[b].push(c), d.dispatcher || (d.disabled = !1, d.dispatcher = function(b) {
        if (!d.disabled) {
            b = vjs.fixEvent(b);
            var c = d.handlers[b.type];
            if (c) for (var e = c.slice(0), f = 0, g = e.length; g > f && !b.isImmediatePropagationStopped(); f++) e[f].call(a, b);
        }
    }), 1 == d.handlers[b].length && (a.addEventListener ? a.addEventListener(b, d.dispatcher, !1) : a.attachEvent && a.attachEvent("on" + b, d.dispatcher));
}, vjs.off = function(a, b, c) {
    if (vjs.hasData(a)) {
        var d = vjs.getData(a);
        if (d.handlers) {
            if (vjs.obj.isArray(b)) return _handleMultipleEvents(vjs.off, a, b, c);
            var e = function(b) {
                d.handlers[b] = [], vjs.cleanUpEvents(a, b);
            };
            if (b) {
                var f = d.handlers[b];
                if (f) {
                    if (!c) return void e(b);
                    if (c.guid) for (var g = 0; g < f.length; g++) f[g].guid === c.guid && f.splice(g--, 1);
                    vjs.cleanUpEvents(a, b);
                }
            } else for (var h in d.handlers) e(h);
        }
    }
}, vjs.cleanUpEvents = function(a, b) {
    var c = vjs.getData(a);
    0 === c.handlers[b].length && (delete c.handlers[b], a.removeEventListener ? a.removeEventListener(b, c.dispatcher, !1) : a.detachEvent && a.detachEvent("on" + b, c.dispatcher)), 
    vjs.isEmpty(c.handlers) && (delete c.handlers, delete c.dispatcher, delete c.disabled), 
    vjs.isEmpty(c) && vjs.removeData(a);
}, vjs.fixEvent = function(a) {
    function b() {
        return !0;
    }
    function c() {
        return !1;
    }
    if (!a || !a.isPropagationStopped) {
        var d = a || window.event;
        a = {};
        for (var e in d) "layerX" !== e && "layerY" !== e && "keyLocation" !== e && ("returnValue" == e && d.preventDefault || (a[e] = d[e]));
        if (a.target || (a.target = a.srcElement || document), a.relatedTarget = a.fromElement === a.target ? a.toElement : a.fromElement, 
        a.preventDefault = function() {
            d.preventDefault && d.preventDefault(), a.returnValue = !1, a.isDefaultPrevented = b, 
            a.defaultPrevented = !0;
        }, a.isDefaultPrevented = c, a.defaultPrevented = !1, a.stopPropagation = function() {
            d.stopPropagation && d.stopPropagation(), a.cancelBubble = !0, a.isPropagationStopped = b;
        }, a.isPropagationStopped = c, a.stopImmediatePropagation = function() {
            d.stopImmediatePropagation && d.stopImmediatePropagation(), a.isImmediatePropagationStopped = b, 
            a.stopPropagation();
        }, a.isImmediatePropagationStopped = c, null != a.clientX) {
            var f = document.documentElement, g = document.body;
            a.pageX = a.clientX + (f && f.scrollLeft || g && g.scrollLeft || 0) - (f && f.clientLeft || g && g.clientLeft || 0), 
            a.pageY = a.clientY + (f && f.scrollTop || g && g.scrollTop || 0) - (f && f.clientTop || g && g.clientTop || 0);
        }
        a.which = a.charCode || a.keyCode, null != a.button && (a.button = 1 & a.button ? 0 : 4 & a.button ? 1 : 2 & a.button ? 2 : 0);
    }
    return a;
}, vjs.trigger = function(a, b) {
    var c = vjs.hasData(a) ? vjs.getData(a) : {}, d = a.parentNode || a.ownerDocument;
    if ("string" == typeof b && (b = {
        type: b,
        target: a
    }), b = vjs.fixEvent(b), c.dispatcher && c.dispatcher.call(a, b), d && !b.isPropagationStopped() && b.bubbles !== !1) vjs.trigger(d, b); else if (!d && !b.defaultPrevented) {
        var e = vjs.getData(b.target);
        b.target[b.type] && (e.disabled = !0, "function" == typeof b.target[b.type] && b.target[b.type](), 
        e.disabled = !1);
    }
    return !b.defaultPrevented;
}, vjs.one = function(a, b, c) {
    if (vjs.obj.isArray(b)) return _handleMultipleEvents(vjs.one, a, b, c);
    var d = function() {
        vjs.off(a, b, d), c.apply(this, arguments);
    };
    d.guid = c.guid = c.guid || vjs.guid++, vjs.on(a, b, d);
};

var hasOwnProp = Object.prototype.hasOwnProperty;

vjs.createEl = function(a, b) {
    var c;
    return a = a || "div", b = b || {}, c = document.createElement(a), vjs.obj.each(b, function(a, b) {
        -1 !== a.indexOf("aria-") || "role" == a ? c.setAttribute(a, b) : c[a] = b;
    }), c;
}, vjs.capitalize = function(a) {
    return a.charAt(0).toUpperCase() + a.slice(1);
}, vjs.obj = {}, vjs.obj.create = Object.create || function(a) {
    function b() {}
    return b.prototype = a, new b();
}, vjs.obj.each = function(a, b, c) {
    for (var d in a) hasOwnProp.call(a, d) && b.call(c || this, d, a[d]);
}, vjs.obj.merge = function(a, b) {
    if (!b) return a;
    for (var c in b) hasOwnProp.call(b, c) && (a[c] = b[c]);
    return a;
}, vjs.obj.deepMerge = function(a, b) {
    var c, d, e;
    a = vjs.obj.copy(a);
    for (c in b) hasOwnProp.call(b, c) && (d = a[c], e = b[c], vjs.obj.isPlain(d) && vjs.obj.isPlain(e) ? a[c] = vjs.obj.deepMerge(d, e) : a[c] = b[c]);
    return a;
}, vjs.obj.copy = function(a) {
    return vjs.obj.merge({}, a);
}, vjs.obj.isPlain = function(a) {
    return !!a && "object" == typeof a && "[object Object]" === a.toString() && a.constructor === Object;
}, vjs.obj.isArray = Array.isArray || function(a) {
    return "[object Array]" === Object.prototype.toString.call(a);
}, vjs.isNaN = function(a) {
    return a !== a;
}, vjs.bind = function(a, b, c) {
    b.guid || (b.guid = vjs.guid++);
    var d = function() {
        return b.apply(a, arguments);
    };
    return d.guid = c ? c + "_" + b.guid : b.guid, d;
}, vjs.cache = {}, vjs.guid = 1, vjs.expando = "vdata" + new Date().getTime(), vjs.getData = function(a) {
    var b = a[vjs.expando];
    return b || (b = a[vjs.expando] = vjs.guid++, vjs.cache[b] = {}), vjs.cache[b];
}, vjs.hasData = function(a) {
    var b = a[vjs.expando];
    return !(!b || vjs.isEmpty(vjs.cache[b]));
}, vjs.removeData = function(a) {
    var b = a[vjs.expando];
    if (b) {
        delete vjs.cache[b];
        try {
            delete a[vjs.expando];
        } catch (c) {
            a.removeAttribute ? a.removeAttribute(vjs.expando) : a[vjs.expando] = null;
        }
    }
}, vjs.isEmpty = function(a) {
    for (var b in a) if (null !== a[b]) return !1;
    return !0;
}, vjs.hasClass = function(a, b) {
    return -1 !== (" " + a.className + " ").indexOf(" " + b + " ");
}, vjs.addClass = function(a, b) {
    vjs.hasClass(a, b) || (a.className = "" === a.className ? b : a.className + " " + b);
}, vjs.removeClass = function(a, b) {
    var c, d;
    if (vjs.hasClass(a, b)) {
        for (c = a.className.split(" "), d = c.length - 1; d >= 0; d--) c[d] === b && c.splice(d, 1);
        a.className = c.join(" ");
    }
}, vjs.TEST_VID = vjs.createEl("video"), vjs.USER_AGENT = navigator.userAgent, vjs.IS_IPHONE = /iPhone/i.test(vjs.USER_AGENT), 
vjs.IS_IPAD = /iPad/i.test(vjs.USER_AGENT), vjs.IS_IPOD = /iPod/i.test(vjs.USER_AGENT), 
vjs.IS_IOS = vjs.IS_IPHONE || vjs.IS_IPAD || vjs.IS_IPOD, vjs.IOS_VERSION = function() {
    var a = vjs.USER_AGENT.match(/OS (\d+)_/i);
    return a && a[1] ? a[1] : void 0;
}(), vjs.IS_ANDROID = /Android/i.test(vjs.USER_AGENT), vjs.ANDROID_VERSION = function() {
    var a, b, c = vjs.USER_AGENT.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
    return c ? (a = c[1] && parseFloat(c[1]), b = c[2] && parseFloat(c[2]), a && b ? parseFloat(c[1] + "." + c[2]) : a ? a : null) : null;
}(), vjs.IS_OLD_ANDROID = vjs.IS_ANDROID && /webkit/i.test(vjs.USER_AGENT) && vjs.ANDROID_VERSION < 2.3, 
vjs.IS_FIREFOX = /Firefox/i.test(vjs.USER_AGENT), vjs.IS_CHROME = /Chrome/i.test(vjs.USER_AGENT), 
vjs.TOUCH_ENABLED = !!("ontouchstart" in window || window.DocumentTouch && document instanceof window.DocumentTouch), 
vjs.BACKGROUND_SIZE_SUPPORTED = "backgroundSize" in vjs.TEST_VID.style, vjs.setElementAttributes = function(a, b) {
    vjs.obj.each(b, function(b, c) {
        null === c || "undefined" == typeof c || c === !1 ? a.removeAttribute(b) : a.setAttribute(b, c === !0 ? "" : c);
    });
}, vjs.getElementAttributes = function(a) {
    var b, c, d, e, f;
    if (b = {}, c = ",autoplay,controls,loop,muted,default,", a && a.attributes && a.attributes.length > 0) {
        d = a.attributes;
        for (var g = d.length - 1; g >= 0; g--) e = d[g].name, f = d[g].value, ("boolean" == typeof a[e] || -1 !== c.indexOf("," + e + ",")) && (f = null !== f ? !0 : !1), 
        b[e] = f;
    }
    return b;
}, vjs.getComputedDimension = function(a, b) {
    var c = "";
    return document.defaultView && document.defaultView.getComputedStyle ? c = document.defaultView.getComputedStyle(a, "").getPropertyValue(b) : a.currentStyle && (c = a["client" + b.substr(0, 1).toUpperCase() + b.substr(1)] + "px"), 
    c;
}, vjs.insertFirst = function(a, b) {
    b.firstChild ? b.insertBefore(a, b.firstChild) : b.appendChild(a);
}, vjs.browser = {}, vjs.el = function(a) {
    return 0 === a.indexOf("#") && (a = a.slice(1)), document.getElementById(a);
}, vjs.formatTime = function(a, b) {
    b = b || a;
    var c = Math.floor(a % 60), d = Math.floor(a / 60 % 60), e = Math.floor(a / 3600), f = Math.floor(b / 60 % 60), g = Math.floor(b / 3600);
    return (isNaN(a) || a === 1 / 0) && (e = d = c = "-"), e = e > 0 || g > 0 ? e + ":" : "", 
    d = ((e || f >= 10) && 10 > d ? "0" + d : d) + ":", c = 10 > c ? "0" + c : c, e + d + c;
}, vjs.blockTextSelection = function() {
    document.body.focus(), document.onselectstart = function() {
        return !1;
    };
}, vjs.unblockTextSelection = function() {
    document.onselectstart = function() {
        return !0;
    };
}, vjs.trim = function(a) {
    return (a + "").replace(/^\s+|\s+$/g, "");
}, vjs.round = function(a, b) {
    return b || (b = 0), Math.round(a * Math.pow(10, b)) / Math.pow(10, b);
}, vjs.createTimeRange = function(a, b) {
    return {
        length: 1,
        start: function() {
            return a;
        },
        end: function() {
            return b;
        }
    };
}, vjs.setLocalStorage = function(a, b) {
    try {
        var c = window.localStorage || !1;
        if (!c) return;
        c[a] = b;
    } catch (d) {
        22 == d.code || 1014 == d.code ? vjs.log("LocalStorage Full (VideoJS)", d) : 18 == d.code ? vjs.log("LocalStorage not allowed (VideoJS)", d) : vjs.log("LocalStorage Error (VideoJS)", d);
    }
}, vjs.getAbsoluteURL = function(a) {
    return a.match(/^https?:\/\//) || (a = vjs.createEl("div", {
        innerHTML: '<a href="' + a + '">x</a>'
    }).firstChild.href), a;
}, vjs.parseUrl = function(a) {
    var b, c, d, e, f;
    e = [ "protocol", "hostname", "port", "pathname", "search", "hash", "host" ], c = vjs.createEl("a", {
        href: a
    }), d = "" === c.host && "file:" !== c.protocol, d && (b = vjs.createEl("div"), 
    b.innerHTML = '<a href="' + a + '"></a>', c = b.firstChild, b.setAttribute("style", "display:none; position:absolute;"), 
    document.body.appendChild(b)), f = {};
    for (var g = 0; g < e.length; g++) f[e[g]] = c[e[g]];
    return d && document.body.removeChild(b), f;
}, vjs.log = function() {
    _logType(null, arguments);
}, vjs.log.history = [], vjs.log.error = function() {
    _logType("error", arguments);
}, vjs.log.warn = function() {
    _logType("warn", arguments);
}, vjs.findPosition = function(a) {
    var b, c, d, e, f, g, h, i, j;
    return a.getBoundingClientRect && a.parentNode && (b = a.getBoundingClientRect()), 
    b ? (c = document.documentElement, d = document.body, e = c.clientLeft || d.clientLeft || 0, 
    f = window.pageXOffset || d.scrollLeft, g = b.left + f - e, h = c.clientTop || d.clientTop || 0, 
    i = window.pageYOffset || d.scrollTop, j = b.top + i - h, {
        left: vjs.round(g),
        top: vjs.round(j)
    }) : {
        left: 0,
        top: 0
    };
}, vjs.arr = {}, vjs.arr.forEach = function(a, b, c) {
    if (vjs.obj.isArray(a) && b instanceof Function) for (var d = 0, e = a.length; e > d; ++d) b.call(c || vjs, a[d], d, a);
    return a;
}, vjs.xhr = function(a, b) {
    var c, d, e, f, g, h, i, j, k;
    "string" == typeof a && (a = {
        uri: a
    }), videojs.util.mergeOptions({
        method: "GET",
        timeout: 45e3
    }, a), b = b || function() {}, j = function() {
        window.clearTimeout(i), b(null, d, d.response || d.responseText);
    }, k = function(a) {
        window.clearTimeout(i), a && "string" != typeof a || (a = new Error(a)), b(a, d);
    }, c = window.XMLHttpRequest, "undefined" == typeof c && (c = function() {
        try {
            return new window.ActiveXObject("Msxml2.XMLHTTP.6.0");
        } catch (a) {}
        try {
            return new window.ActiveXObject("Msxml2.XMLHTTP.3.0");
        } catch (b) {}
        try {
            return new window.ActiveXObject("Msxml2.XMLHTTP");
        } catch (c) {}
        throw new Error("This browser does not support XMLHttpRequest.");
    }), d = new c(), d.uri = a.uri, e = vjs.parseUrl(a.uri), f = window.location, h = e.protocol + e.host !== f.protocol + f.host, 
    !h || !window.XDomainRequest || "withCredentials" in d ? (g = "file:" == e.protocol || "file:" == f.protocol, 
    d.onreadystatechange = function() {
        if (4 === d.readyState) {
            if (d.timedout) return k("timeout");
            200 === d.status || g && 0 === d.status ? j() : k();
        }
    }, a.timeout && (i = window.setTimeout(function() {
        4 !== d.readyState && (d.timedout = !0, d.abort());
    }, a.timeout))) : (d = new window.XDomainRequest(), d.onload = j, d.onerror = k, 
    d.onprogress = function() {}, d.ontimeout = function() {});
    try {
        d.open(a.method || "GET", a.uri, !0);
    } catch (l) {
        return k(l);
    }
    a.withCredentials && (d.withCredentials = !0), a.responseType && (d.responseType = a.responseType);
    try {
        d.send();
    } catch (l) {
        return k(l);
    }
    return d;
}, vjs.util = {}, vjs.util.mergeOptions = function(a, b) {
    var c, d, e;
    a = vjs.obj.copy(a);
    for (c in b) b.hasOwnProperty(c) && (d = a[c], e = b[c], vjs.obj.isPlain(d) && vjs.obj.isPlain(e) ? a[c] = vjs.util.mergeOptions(d, e) : a[c] = b[c]);
    return a;
}, vjs.Component = vjs.CoreObject.extend({
    init: function(a, b, c) {
        this.player_ = a, this.options_ = vjs.obj.copy(this.options_), b = this.options(b), 
        this.id_ = b.id || b.el && b.el.id, this.id_ || (this.id_ = (a.id && a.id() || "no_player") + "_component_" + vjs.guid++), 
        this.name_ = b.name || null, this.el_ = b.el || this.createEl(), this.children_ = [], 
        this.childIndex_ = {}, this.childNameIndex_ = {}, this.initChildren(), this.ready(c), 
        b.reportTouchActivity !== !1 && this.enableTouchActivity();
    }
}), vjs.Component.prototype.dispose = function() {
    if (this.trigger({
        type: "dispose",
        bubbles: !1
    }), this.children_) for (var a = this.children_.length - 1; a >= 0; a--) this.children_[a].dispose && this.children_[a].dispose();
    this.children_ = null, this.childIndex_ = null, this.childNameIndex_ = null, this.off(), 
    this.el_.parentNode && this.el_.parentNode.removeChild(this.el_), vjs.removeData(this.el_), 
    this.el_ = null;
}, vjs.Component.prototype.player_ = !0, vjs.Component.prototype.player = function() {
    return this.player_;
}, vjs.Component.prototype.options_, vjs.Component.prototype.options = function(a) {
    return void 0 === a ? this.options_ : this.options_ = vjs.util.mergeOptions(this.options_, a);
}, vjs.Component.prototype.el_, vjs.Component.prototype.createEl = function(a, b) {
    return vjs.createEl(a, b);
}, vjs.Component.prototype.localize = function(a) {
    var b = this.player_.language(), c = this.player_.languages();
    return c && c[b] && c[b][a] ? c[b][a] : a;
}, vjs.Component.prototype.el = function() {
    return this.el_;
}, vjs.Component.prototype.contentEl_, vjs.Component.prototype.contentEl = function() {
    return this.contentEl_ || this.el_;
}, vjs.Component.prototype.id_, vjs.Component.prototype.id = function() {
    return this.id_;
}, vjs.Component.prototype.name_, vjs.Component.prototype.name = function() {
    return this.name_;
}, vjs.Component.prototype.children_, vjs.Component.prototype.children = function() {
    return this.children_;
}, vjs.Component.prototype.childIndex_, vjs.Component.prototype.getChildById = function(a) {
    return this.childIndex_[a];
}, vjs.Component.prototype.childNameIndex_, vjs.Component.prototype.getChild = function(a) {
    return this.childNameIndex_[a];
}, vjs.Component.prototype.addChild = function(a, b) {
    var c, d, e;
    return "string" == typeof a ? (e = a, b = b || {}, d = b.componentClass || vjs.capitalize(e), 
    b.name = e, c = new window.videojs[d](this.player_ || this, b)) : c = a, this.children_.push(c), 
    "function" == typeof c.id && (this.childIndex_[c.id()] = c), e = e || c.name && c.name(), 
    e && (this.childNameIndex_[e] = c), "function" == typeof c.el && c.el() && this.contentEl().appendChild(c.el()), 
    c;
}, vjs.Component.prototype.removeChild = function(a) {
    if ("string" == typeof a && (a = this.getChild(a)), a && this.children_) {
        for (var b = !1, c = this.children_.length - 1; c >= 0; c--) if (this.children_[c] === a) {
            b = !0, this.children_.splice(c, 1);
            break;
        }
        if (b) {
            this.childIndex_[a.id] = null, this.childNameIndex_[a.name] = null;
            var d = a.el();
            d && d.parentNode === this.contentEl() && this.contentEl().removeChild(a.el());
        }
    }
}, vjs.Component.prototype.initChildren = function() {
    var a, b, c, d, e, f, g;
    if (a = this, b = a.options(), c = b.children) if (g = function(c, d) {
        void 0 !== b[c] && (d = b[c]), d !== !1 && (a[c] = a.addChild(c, d));
    }, vjs.obj.isArray(c)) for (var h = 0; h < c.length; h++) d = c[h], "string" == typeof d ? (e = d, 
    f = {}) : (e = d.name, f = d), g(e, f); else vjs.obj.each(c, g);
}, vjs.Component.prototype.buildCSSClass = function() {
    return "";
}, vjs.Component.prototype.on = function(a, b, c) {
    var d, e, f, g, h, i;
    return "string" == typeof a || vjs.obj.isArray(a) ? vjs.on(this.el_, a, vjs.bind(this, b)) : (d = a, 
    e = b, f = vjs.bind(this, c), i = this, g = function() {
        i.off(d, e, f);
    }, g.guid = f.guid, this.on("dispose", g), h = function() {
        i.off("dispose", g);
    }, h.guid = f.guid, a.nodeName ? (vjs.on(d, e, f), vjs.on(d, "dispose", h)) : "function" == typeof a.on && (d.on(e, f), 
    d.on("dispose", h))), this;
}, vjs.Component.prototype.off = function(a, b, c) {
    var d, e, f;
    return !a || "string" == typeof a || vjs.obj.isArray(a) ? vjs.off(this.el_, a, b) : (d = a, 
    e = b, f = vjs.bind(this, c), this.off("dispose", f), a.nodeName ? (vjs.off(d, e, f), 
    vjs.off(d, "dispose", f)) : (d.off(e, f), d.off("dispose", f))), this;
}, vjs.Component.prototype.one = function(a, b, c) {
    var d, e, f, g, h;
    return "string" == typeof a || vjs.obj.isArray(a) ? vjs.one(this.el_, a, vjs.bind(this, b)) : (d = a, 
    e = b, f = vjs.bind(this, c), g = this, h = function() {
        g.off(d, e, h), f.apply(this, arguments);
    }, h.guid = f.guid, this.on(d, e, h)), this;
}, vjs.Component.prototype.trigger = function(a) {
    return vjs.trigger(this.el_, a), this;
}, vjs.Component.prototype.isReady_, vjs.Component.prototype.isReadyOnInitFinish_ = !0, 
vjs.Component.prototype.readyQueue_, vjs.Component.prototype.ready = function(a) {
    return a && (this.isReady_ ? a.call(this) : (void 0 === this.readyQueue_ && (this.readyQueue_ = []), 
    this.readyQueue_.push(a))), this;
}, vjs.Component.prototype.triggerReady = function() {
    this.isReady_ = !0;
    var a = this.readyQueue_;
    if (a && a.length > 0) {
        for (var b = 0, c = a.length; c > b; b++) a[b].call(this);
        this.readyQueue_ = [], this.trigger("ready");
    }
}, vjs.Component.prototype.hasClass = function(a) {
    return vjs.hasClass(this.el_, a);
}, vjs.Component.prototype.addClass = function(a) {
    return vjs.addClass(this.el_, a), this;
}, vjs.Component.prototype.removeClass = function(a) {
    return vjs.removeClass(this.el_, a), this;
}, vjs.Component.prototype.show = function() {
    return this.el_.style.display = "block", this;
}, vjs.Component.prototype.hide = function() {
    return this.el_.style.display = "none", this;
}, vjs.Component.prototype.lockShowing = function() {
    return this.addClass("vjs-lock-showing"), this;
}, vjs.Component.prototype.unlockShowing = function() {
    return this.removeClass("vjs-lock-showing"), this;
}, vjs.Component.prototype.disable = function() {
    this.hide(), this.show = function() {};
}, vjs.Component.prototype.width = function(a, b) {
    return this.dimension("width", a, b);
}, vjs.Component.prototype.height = function(a, b) {
    return this.dimension("height", a, b);
}, vjs.Component.prototype.dimensions = function(a, b) {
    return this.width(a, !0).height(b);
}, vjs.Component.prototype.dimension = function(a, b, c) {
    if (void 0 !== b) return (null === b || vjs.isNaN(b)) && (b = 0), -1 !== ("" + b).indexOf("%") || -1 !== ("" + b).indexOf("px") ? this.el_.style[a] = b : "auto" === b ? this.el_.style[a] = "" : this.el_.style[a] = b + "px", 
    c || this.trigger("resize"), this;
    if (!this.el_) return 0;
    var d = this.el_.style[a], e = d.indexOf("px");
    return -1 !== e ? parseInt(d.slice(0, e), 10) : parseInt(this.el_["offset" + vjs.capitalize(a)], 10);
}, vjs.Component.prototype.onResize, vjs.Component.prototype.emitTapEvents = function() {
    var a, b, c, d, e, f, g, h, i;
    a = 0, b = null, i = 22, this.on("touchstart", function(c) {
        1 === c.touches.length && (b = c.touches[0], a = new Date().getTime(), d = !0);
    }), this.on("touchmove", function(a) {
        a.touches.length > 1 ? d = !1 : b && (f = a.touches[0].pageX - b.pageX, g = a.touches[0].pageY - b.pageY, 
        h = Math.sqrt(f * f + g * g), h > i && (d = !1));
    }), e = function() {
        d = !1;
    }, this.on("touchleave", e), this.on("touchcancel", e), this.on("touchend", function(e) {
        b = null, d === !0 && (c = new Date().getTime() - a, 250 > c && (e.preventDefault(), 
        this.trigger("tap")));
    });
}, vjs.Component.prototype.enableTouchActivity = function() {
    var a, b, c;
    this.player().reportUserActivity && (a = vjs.bind(this.player(), this.player().reportUserActivity), 
    this.on("touchstart", function() {
        a(), this.clearInterval(b), b = this.setInterval(a, 250);
    }), c = function(c) {
        a(), this.clearInterval(b);
    }, this.on("touchmove", a), this.on("touchend", c), this.on("touchcancel", c));
}, vjs.Component.prototype.setTimeout = function(a, b) {
    a = vjs.bind(this, a);
    var c = setTimeout(a, b), d = function() {
        this.clearTimeout(c);
    };
    return d.guid = "vjs-timeout-" + c, this.on("dispose", d), c;
}, vjs.Component.prototype.clearTimeout = function(a) {
    clearTimeout(a);
    var b = function() {};
    return b.guid = "vjs-timeout-" + a, this.off("dispose", b), a;
}, vjs.Component.prototype.setInterval = function(a, b) {
    a = vjs.bind(this, a);
    var c = setInterval(a, b), d = function() {
        this.clearInterval(c);
    };
    return d.guid = "vjs-interval-" + c, this.on("dispose", d), c;
}, vjs.Component.prototype.clearInterval = function(a) {
    clearInterval(a);
    var b = function() {};
    return b.guid = "vjs-interval-" + a, this.off("dispose", b), a;
}, vjs.Button = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b), this.emitTapEvents(), this.on("tap", this.onClick), 
        this.on("click", this.onClick), this.on("focus", this.onFocus), this.on("blur", this.onBlur);
    }
}), vjs.Button.prototype.createEl = function(a, b) {
    var c;
    return b = vjs.obj.merge({
        className: this.buildCSSClass(),
        role: "button",
        "aria-live": "polite",
        tabIndex: 0
    }, b), c = vjs.Component.prototype.createEl.call(this, a, b), b.innerHTML || (this.contentEl_ = vjs.createEl("div", {
        className: "vjs-control-content"
    }), this.controlText_ = vjs.createEl("span", {
        className: "vjs-control-text",
        innerHTML: this.localize(this.buttonText) || "Need Text"
    }), this.contentEl_.appendChild(this.controlText_), c.appendChild(this.contentEl_)), 
    c;
}, vjs.Button.prototype.buildCSSClass = function() {
    return "vjs-control " + vjs.Component.prototype.buildCSSClass.call(this);
}, vjs.Button.prototype.onClick = function() {}, vjs.Button.prototype.onFocus = function() {
    vjs.on(document, "keydown", vjs.bind(this, this.onKeyPress));
}, vjs.Button.prototype.onKeyPress = function(a) {
    (32 == a.which || 13 == a.which) && (a.preventDefault(), this.onClick());
}, vjs.Button.prototype.onBlur = function() {
    vjs.off(document, "keydown", vjs.bind(this, this.onKeyPress));
}, vjs.Slider = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b), this.bar = this.getChild(this.options_.barName), 
        this.handle = this.getChild(this.options_.handleName), this.on("mousedown", this.onMouseDown), 
        this.on("touchstart", this.onMouseDown), this.on("focus", this.onFocus), this.on("blur", this.onBlur), 
        this.on("click", this.onClick), this.on(a, "controlsvisible", this.update), this.on(a, this.playerEvent, this.update);
    }
}), vjs.Slider.prototype.createEl = function(a, b) {
    return b = b || {}, b.className = b.className + " vjs-slider", b = vjs.obj.merge({
        role: "slider",
        "aria-valuenow": 0,
        "aria-valuemin": 0,
        "aria-valuemax": 100,
        tabIndex: 0
    }, b), vjs.Component.prototype.createEl.call(this, a, b);
}, vjs.Slider.prototype.onMouseDown = function(a) {
    a.preventDefault(), vjs.blockTextSelection(), this.addClass("vjs-sliding"), this.on(document, "mousemove", this.onMouseMove), 
    this.on(document, "mouseup", this.onMouseUp), this.on(document, "touchmove", this.onMouseMove), 
    this.on(document, "touchend", this.onMouseUp), this.onMouseMove(a);
}, vjs.Slider.prototype.onMouseMove = function() {}, vjs.Slider.prototype.onMouseUp = function() {
    vjs.unblockTextSelection(), this.removeClass("vjs-sliding"), this.off(document, "mousemove", this.onMouseMove), 
    this.off(document, "mouseup", this.onMouseUp), this.off(document, "touchmove", this.onMouseMove), 
    this.off(document, "touchend", this.onMouseUp), this.update();
}, vjs.Slider.prototype.update = function() {
    if (this.el_) {
        var a, b = this.getPercent(), c = this.handle, d = this.bar;
        if (isNaN(b) && (b = 0), a = b, c) {
            var e = this.el_, f = e.offsetWidth, g = c.el().offsetWidth, h = g ? g / f : 0, i = 1 - h, j = b * i;
            a = j + h / 2, c.el().style.left = vjs.round(100 * j, 2) + "%";
        }
        d && (d.el().style.width = vjs.round(100 * a, 2) + "%");
    }
}, vjs.Slider.prototype.calculateDistance = function(a) {
    var b, c, d, e, f, g, h, i, j;
    if (b = this.el_, c = vjs.findPosition(b), f = g = b.offsetWidth, h = this.handle, 
    this.options().vertical) {
        if (e = c.top, j = a.changedTouches ? a.changedTouches[0].pageY : a.pageY, h) {
            var k = h.el().offsetHeight;
            e += k / 2, g -= k;
        }
        return Math.max(0, Math.min(1, (e - j + g) / g));
    }
    if (d = c.left, i = a.changedTouches ? a.changedTouches[0].pageX : a.pageX, h) {
        var l = h.el().offsetWidth;
        d += l / 2, f -= l;
    }
    return Math.max(0, Math.min(1, (i - d) / f));
}, vjs.Slider.prototype.onFocus = function() {
    this.on(document, "keydown", this.onKeyPress);
}, vjs.Slider.prototype.onKeyPress = function(a) {
    37 == a.which || 40 == a.which ? (a.preventDefault(), this.stepBack()) : (38 == a.which || 39 == a.which) && (a.preventDefault(), 
    this.stepForward());
}, vjs.Slider.prototype.onBlur = function() {
    this.off(document, "keydown", this.onKeyPress);
}, vjs.Slider.prototype.onClick = function(a) {
    a.stopImmediatePropagation(), a.preventDefault();
}, vjs.SliderHandle = vjs.Component.extend(), vjs.SliderHandle.prototype.defaultValue = 0, 
vjs.SliderHandle.prototype.createEl = function(a, b) {
    return b = b || {}, b.className = b.className + " vjs-slider-handle", b = vjs.obj.merge({
        innerHTML: '<span class="vjs-control-text">' + this.defaultValue + "</span>"
    }, b), vjs.Component.prototype.createEl.call(this, "div", b);
}, vjs.Menu = vjs.Component.extend(), vjs.Menu.prototype.addItem = function(a) {
    this.addChild(a), a.on("click", vjs.bind(this, function() {
        this.unlockShowing();
    }));
}, vjs.Menu.prototype.createEl = function() {
    var a = this.options().contentElType || "ul";
    this.contentEl_ = vjs.createEl(a, {
        className: "vjs-menu-content"
    });
    var b = vjs.Component.prototype.createEl.call(this, "div", {
        append: this.contentEl_,
        className: "vjs-menu"
    });
    return b.appendChild(this.contentEl_), vjs.on(b, "click", function(a) {
        a.preventDefault(), a.stopImmediatePropagation();
    }), b;
}, vjs.MenuItem = vjs.Button.extend({
    init: function(a, b) {
        vjs.Button.call(this, a, b), this.selected(b.selected);
    }
}), vjs.MenuItem.prototype.createEl = function(a, b) {
    return vjs.Button.prototype.createEl.call(this, "li", vjs.obj.merge({
        className: "vjs-menu-item",
        innerHTML: this.localize(this.options_.label)
    }, b));
}, vjs.MenuItem.prototype.onClick = function() {
    this.selected(!0);
}, vjs.MenuItem.prototype.selected = function(a) {
    a ? (this.addClass("vjs-selected"), this.el_.setAttribute("aria-selected", !0)) : (this.removeClass("vjs-selected"), 
    this.el_.setAttribute("aria-selected", !1));
}, vjs.MenuButton = vjs.Button.extend({
    init: function(a, b) {
        vjs.Button.call(this, a, b), this.menu = this.createMenu(), this.addChild(this.menu), 
        this.items && 0 === this.items.length && this.hide(), this.on("keydown", this.onKeyPress), 
        this.el_.setAttribute("aria-haspopup", !0), this.el_.setAttribute("role", "button");
    }
}), vjs.MenuButton.prototype.buttonPressed_ = !1, vjs.MenuButton.prototype.createMenu = function() {
    var a = new vjs.Menu(this.player_);
    if (this.options().title && a.contentEl().appendChild(vjs.createEl("li", {
        className: "vjs-menu-title",
        innerHTML: vjs.capitalize(this.options().title),
        tabindex: -1
    })), this.items = this.createItems(), this.items) for (var b = 0; b < this.items.length; b++) a.addItem(this.items[b]);
    return a;
}, vjs.MenuButton.prototype.createItems = function() {}, vjs.MenuButton.prototype.buildCSSClass = function() {
    return this.className + " vjs-menu-button " + vjs.Button.prototype.buildCSSClass.call(this);
}, vjs.MenuButton.prototype.onFocus = function() {}, vjs.MenuButton.prototype.onBlur = function() {}, 
vjs.MenuButton.prototype.onClick = function() {
    this.one("mouseout", vjs.bind(this, function() {
        this.menu.unlockShowing(), this.el_.blur();
    })), this.buttonPressed_ ? this.unpressButton() : this.pressButton();
}, vjs.MenuButton.prototype.onKeyPress = function(a) {
    a.preventDefault(), 32 == a.which || 13 == a.which ? this.buttonPressed_ ? this.unpressButton() : this.pressButton() : 27 == a.which && this.buttonPressed_ && this.unpressButton();
}, vjs.MenuButton.prototype.pressButton = function() {
    this.buttonPressed_ = !0, this.menu.lockShowing(), this.el_.setAttribute("aria-pressed", !0), 
    this.items && this.items.length > 0 && this.items[0].el().focus();
}, vjs.MenuButton.prototype.unpressButton = function() {
    this.buttonPressed_ = !1, this.menu.unlockShowing(), this.el_.setAttribute("aria-pressed", !1);
}, vjs.MediaError = function(a) {
    "number" == typeof a ? this.code = a : "string" == typeof a ? this.message = a : "object" == typeof a && vjs.obj.merge(this, a), 
    this.message || (this.message = vjs.MediaError.defaultMessages[this.code] || "");
}, vjs.MediaError.prototype.code = 0, vjs.MediaError.prototype.message = "", vjs.MediaError.prototype.status = null, 
vjs.MediaError.errorTypes = [ "MEDIA_ERR_CUSTOM", "MEDIA_ERR_ABORTED", "MEDIA_ERR_NETWORK", "MEDIA_ERR_DECODE", "MEDIA_ERR_SRC_NOT_SUPPORTED", "MEDIA_ERR_ENCRYPTED" ], 
vjs.MediaError.defaultMessages = {
    1: "You aborted the video playback",
    2: "A network error caused the video download to fail part-way.",
    3: "The video playback was aborted due to a corruption problem or because the video used features your browser did not support.",
    4: "The video could not be loaded, either because the server or network failed or because the format is not supported.",
    5: "The video is encrypted and we do not have the keys to decrypt it."
};

for (var errNum = 0; errNum < vjs.MediaError.errorTypes.length; errNum++) vjs.MediaError[vjs.MediaError.errorTypes[errNum]] = errNum, 
vjs.MediaError.prototype[vjs.MediaError.errorTypes[errNum]] = errNum;

if (function() {
    var a, b, c, d;
    for (vjs.browser.fullscreenAPI, a = [ [ "requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror" ], [ "webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror" ], [ "webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror" ], [ "mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror" ], [ "msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError" ] ], 
    b = a[0], d = 0; d < a.length; d++) if (a[d][1] in document) {
        c = a[d];
        break;
    }
    if (c) for (vjs.browser.fullscreenAPI = {}, d = 0; d < c.length; d++) vjs.browser.fullscreenAPI[b[d]] = c[d];
}(), vjs.Player = vjs.Component.extend({
    init: function(a, b, c) {
        this.tag = a, a.id = a.id || "vjs_video_" + vjs.guid++, this.tagAttributes = a && vjs.getElementAttributes(a), 
        b = vjs.obj.merge(this.getTagSettings(a), b), this.language_ = b.language || vjs.options.language, 
        this.languages_ = b.languages || vjs.options.languages, this.cache_ = {}, this.poster_ = b.poster || "", 
        this.controls_ = !!b.controls, a.controls = !1, b.reportTouchActivity = !1, this.isAudio("audio" === this.tag.nodeName.toLowerCase()), 
        vjs.Component.call(this, this, b, c), this.controls() ? this.addClass("vjs-controls-enabled") : this.addClass("vjs-controls-disabled"), 
        this.isAudio() && this.addClass("vjs-audio"), vjs.players[this.id_] = this, b.plugins && vjs.obj.each(b.plugins, function(a, b) {
            this[a](b);
        }, this), this.listenForUserActivity();
    }
}), vjs.Player.prototype.language_, vjs.Player.prototype.language = function(a) {
    return void 0 === a ? this.language_ : (this.language_ = a, this);
}, vjs.Player.prototype.languages_, vjs.Player.prototype.languages = function() {
    return this.languages_;
}, vjs.Player.prototype.options_ = vjs.options, vjs.Player.prototype.dispose = function() {
    this.trigger("dispose"), this.off("dispose"), vjs.players[this.id_] = null, this.tag && this.tag.player && (this.tag.player = null), 
    this.el_ && this.el_.player && (this.el_.player = null), this.tech && this.tech.dispose(), 
    vjs.Component.prototype.dispose.call(this);
}, vjs.Player.prototype.getTagSettings = function(a) {
    var b, c, d = {
        sources: [],
        tracks: []
    };
    if (b = vjs.getElementAttributes(a), c = b["data-setup"], null !== c && vjs.obj.merge(b, vjs.JSON.parse(c || "{}")), 
    vjs.obj.merge(d, b), a.hasChildNodes()) {
        var e, f, g, h, i;
        for (e = a.childNodes, h = 0, i = e.length; i > h; h++) f = e[h], g = f.nodeName.toLowerCase(), 
        "source" === g ? d.sources.push(vjs.getElementAttributes(f)) : "track" === g && d.tracks.push(vjs.getElementAttributes(f));
    }
    return d;
}, vjs.Player.prototype.createEl = function() {
    var a, b = this.el_ = vjs.Component.prototype.createEl.call(this, "div"), c = this.tag;
    if (c.removeAttribute("width"), c.removeAttribute("height"), c.hasChildNodes()) {
        var d, e, f, g, h, i;
        for (d = c.childNodes, e = d.length, i = []; e--; ) g = d[e], h = g.nodeName.toLowerCase(), 
        "track" === h && i.push(g);
        for (f = 0; f < i.length; f++) c.removeChild(i[f]);
    }
    return a = vjs.getElementAttributes(c), vjs.obj.each(a, function(c) {
        "class" == c ? b.className = a[c] : b.setAttribute(c, a[c]);
    }), c.id += "_html5_api", c.className = "vjs-tech", c.player = b.player = this, 
    this.addClass("vjs-paused"), this.width(this.options_.width, !0), this.height(this.options_.height, !0), 
    c.initNetworkState_ = c.networkState, c.parentNode && c.parentNode.insertBefore(b, c), 
    vjs.insertFirst(c, b), this.el_ = b, this.on("loadstart", this.onLoadStart), this.on("waiting", this.onWaiting), 
    this.on([ "canplay", "canplaythrough", "playing", "ended" ], this.onWaitEnd), this.on("seeking", this.onSeeking), 
    this.on("seeked", this.onSeeked), this.on("ended", this.onEnded), this.on("play", this.onPlay), 
    this.on("firstplay", this.onFirstPlay), this.on("pause", this.onPause), this.on("progress", this.onProgress), 
    this.on("durationchange", this.onDurationChange), this.on("fullscreenchange", this.onFullscreenChange), 
    b;
}, vjs.Player.prototype.loadTech = function(a, b) {
    this.tech && this.unloadTech(), "Html5" !== a && this.tag && (vjs.Html5.disposeMediaElement(this.tag), 
    this.tag = null), this.techName = a, this.isReady_ = !1;
    var c = function() {
        this.player_.triggerReady();
    }, d = vjs.obj.merge({
        source: b,
        parentEl: this.el_
    }, this.options_[a.toLowerCase()]);
    b && (this.currentType_ = b.type, b.src == this.cache_.src && this.cache_.currentTime > 0 && (d.startTime = this.cache_.currentTime), 
    this.cache_.src = b.src), this.tech = new window.videojs[a](this, d), this.tech.ready(c);
}, vjs.Player.prototype.unloadTech = function() {
    this.isReady_ = !1, this.tech.dispose(), this.tech = !1;
}, vjs.Player.prototype.onLoadStart = function() {
    this.error(null), this.paused() ? (this.hasStarted(!1), this.one("play", function() {
        this.hasStarted(!0);
    })) : this.trigger("firstplay");
}, vjs.Player.prototype.hasStarted_ = !1, vjs.Player.prototype.hasStarted = function(a) {
    return void 0 !== a ? (this.hasStarted_ !== a && (this.hasStarted_ = a, a ? (this.addClass("vjs-has-started"), 
    this.trigger("firstplay")) : this.removeClass("vjs-has-started")), this) : this.hasStarted_;
}, vjs.Player.prototype.onLoadedMetaData, vjs.Player.prototype.onLoadedData, vjs.Player.prototype.onLoadedAllData, 
vjs.Player.prototype.onPlay = function() {
    this.removeClass("vjs-paused"), this.addClass("vjs-playing");
}, vjs.Player.prototype.onWaiting = function() {
    this.addClass("vjs-waiting");
}, vjs.Player.prototype.onWaitEnd = function() {
    this.removeClass("vjs-waiting");
}, vjs.Player.prototype.onSeeking = function() {
    this.addClass("vjs-seeking");
}, vjs.Player.prototype.onSeeked = function() {
    this.removeClass("vjs-seeking");
}, vjs.Player.prototype.onFirstPlay = function() {
    this.options_.starttime && this.currentTime(this.options_.starttime), this.addClass("vjs-has-started");
}, vjs.Player.prototype.onPause = function() {
    this.removeClass("vjs-playing"), this.addClass("vjs-paused");
}, vjs.Player.prototype.onTimeUpdate, vjs.Player.prototype.onProgress = function() {
    1 == this.bufferedPercent() && this.trigger("loadedalldata");
}, vjs.Player.prototype.onEnded = function() {
    this.options_.loop ? (this.currentTime(0), this.play()) : this.paused() || this.pause();
}, vjs.Player.prototype.onDurationChange = function() {
    var a = this.techGet("duration");
    a && (0 > a && (a = 1 / 0), this.duration(a), a === 1 / 0 ? this.addClass("vjs-live") : this.removeClass("vjs-live"));
}, vjs.Player.prototype.onVolumeChange, vjs.Player.prototype.onFullscreenChange = function() {
    this.isFullscreen() ? this.addClass("vjs-fullscreen") : this.removeClass("vjs-fullscreen");
}, vjs.Player.prototype.cache_, vjs.Player.prototype.getCache = function() {
    return this.cache_;
}, vjs.Player.prototype.techCall = function(a, b) {
    if (this.tech && !this.tech.isReady_) this.tech.ready(function() {
        this[a](b);
    }); else try {
        this.tech[a](b);
    } catch (c) {
        throw vjs.log(c), c;
    }
}, vjs.Player.prototype.techGet = function(a) {
    if (this.tech && this.tech.isReady_) try {
        return this.tech[a]();
    } catch (b) {
        throw void 0 === this.tech[a] ? vjs.log("Video.js: " + a + " method not defined for " + this.techName + " playback technology.", b) : "TypeError" == b.name ? (vjs.log("Video.js: " + a + " unavailable on " + this.techName + " playback technology element.", b), 
        this.tech.isReady_ = !1) : vjs.log(b), b;
    }
}, vjs.Player.prototype.play = function() {
    return this.techCall("play"), this;
}, vjs.Player.prototype.pause = function() {
    return this.techCall("pause"), this;
}, vjs.Player.prototype.paused = function() {
    return this.techGet("paused") === !1 ? !1 : !0;
}, vjs.Player.prototype.currentTime = function(a) {
    return void 0 !== a ? (this.techCall("setCurrentTime", a), this) : this.cache_.currentTime = this.techGet("currentTime") || 0;
}, vjs.Player.prototype.duration = function(a) {
    return void 0 !== a ? (this.cache_.duration = parseFloat(a), this) : (void 0 === this.cache_.duration && this.onDurationChange(), 
    this.cache_.duration || 0);
}, vjs.Player.prototype.remainingTime = function() {
    return this.duration() - this.currentTime();
}, vjs.Player.prototype.buffered = function() {
    var a = this.techGet("buffered");
    return a && a.length || (a = vjs.createTimeRange(0, 0)), a;
}, vjs.Player.prototype.bufferedPercent = function() {
    var a, b, c = this.duration(), d = this.buffered(), e = 0;
    if (!c) return 0;
    for (var f = 0; f < d.length; f++) a = d.start(f), b = d.end(f), b > c && (b = c), 
    e += b - a;
    return e / c;
}, vjs.Player.prototype.bufferedEnd = function() {
    var a = this.buffered(), b = this.duration(), c = a.end(a.length - 1);
    return c > b && (c = b), c;
}, vjs.Player.prototype.volume = function(a) {
    var b;
    return void 0 !== a ? (b = Math.max(0, Math.min(1, parseFloat(a))), this.cache_.volume = b, 
    this.techCall("setVolume", b), vjs.setLocalStorage("volume", b), this) : (b = parseFloat(this.techGet("volume")), 
    isNaN(b) ? 1 : b);
}, vjs.Player.prototype.muted = function(a) {
    return void 0 !== a ? (this.techCall("setMuted", a), this) : this.techGet("muted") || !1;
}, vjs.Player.prototype.supportsFullScreen = function() {
    return this.techGet("supportsFullScreen") || !1;
}, vjs.Player.prototype.isFullscreen_ = !1, vjs.Player.prototype.isFullscreen = function(a) {
    return void 0 !== a ? (this.isFullscreen_ = !!a, this) : this.isFullscreen_;
}, vjs.Player.prototype.isFullScreen = function(a) {
    return vjs.log.warn('player.isFullScreen() has been deprecated, use player.isFullscreen() with a lowercase "s")'), 
    this.isFullscreen(a);
}, vjs.Player.prototype.requestFullscreen = function() {
    var a = vjs.browser.fullscreenAPI;
    return this.isFullscreen(!0), a ? (vjs.on(document, a.fullscreenchange, vjs.bind(this, function(b) {
        this.isFullscreen(document[a.fullscreenElement]), this.isFullscreen() === !1 && vjs.off(document, a.fullscreenchange, arguments.callee), 
        this.trigger("fullscreenchange");
    })), this.el_[a.requestFullscreen]()) : this.tech.supportsFullScreen() ? this.techCall("enterFullScreen") : (this.enterFullWindow(), 
    this.trigger("fullscreenchange")), this;
}, vjs.Player.prototype.requestFullScreen = function() {
    return vjs.log.warn('player.requestFullScreen() has been deprecated, use player.requestFullscreen() with a lowercase "s")'), 
    this.requestFullscreen();
}, vjs.Player.prototype.exitFullscreen = function() {
    var a = vjs.browser.fullscreenAPI;
    return this.isFullscreen(!1), a ? document[a.exitFullscreen]() : this.tech.supportsFullScreen() ? this.techCall("exitFullScreen") : (this.exitFullWindow(), 
    this.trigger("fullscreenchange")), this;
}, vjs.Player.prototype.cancelFullScreen = function() {
    return vjs.log.warn("player.cancelFullScreen() has been deprecated, use player.exitFullscreen()"), 
    this.exitFullscreen();
}, vjs.Player.prototype.enterFullWindow = function() {
    this.isFullWindow = !0, this.docOrigOverflow = document.documentElement.style.overflow, 
    vjs.on(document, "keydown", vjs.bind(this, this.fullWindowOnEscKey)), document.documentElement.style.overflow = "hidden", 
    vjs.addClass(document.body, "vjs-full-window"), this.trigger("enterFullWindow");
}, vjs.Player.prototype.fullWindowOnEscKey = function(a) {
    27 === a.keyCode && (this.isFullscreen() === !0 ? this.exitFullscreen() : this.exitFullWindow());
}, vjs.Player.prototype.exitFullWindow = function() {
    this.isFullWindow = !1, vjs.off(document, "keydown", this.fullWindowOnEscKey), document.documentElement.style.overflow = this.docOrigOverflow, 
    vjs.removeClass(document.body, "vjs-full-window"), this.trigger("exitFullWindow");
}, vjs.Player.prototype.selectSource = function(a) {
    for (var b = 0, c = this.options_.techOrder; b < c.length; b++) {
        var d = vjs.capitalize(c[b]), e = window.videojs[d];
        if (e) {
            if (e.isSupported()) for (var f = 0, g = a; f < g.length; f++) {
                var h = g[f];
                if (e.canPlaySource(h)) return {
                    source: h,
                    tech: d
                };
            }
        } else vjs.log.error('The "' + d + '" tech is undefined. Skipped browser support check for that tech.');
    }
    return !1;
}, vjs.Player.prototype.src = function(a) {
    return void 0 === a ? this.techGet("src") : (vjs.obj.isArray(a) ? this.sourceList_(a) : "string" == typeof a ? this.src({
        src: a
    }) : a instanceof Object && (a.type && !window.videojs[this.techName].canPlaySource(a) ? this.sourceList_([ a ]) : (this.cache_.src = a.src, 
    this.currentType_ = a.type || "", this.ready(function() {
        window.videojs[this.techName].prototype.hasOwnProperty("setSource") ? this.techCall("setSource", a) : this.techCall("src", a.src), 
        "auto" == this.options_.preload && this.load(), this.options_.autoplay && this.play();
    }))), this);
}, vjs.Player.prototype.sourceList_ = function(a) {
    var b = this.selectSource(a);
    b ? b.tech === this.techName ? this.src(b.source) : this.loadTech(b.tech, b.source) : (this.setTimeout(function() {
        this.error({
            code: 4,
            message: this.localize(this.options().notSupportedMessage)
        });
    }, 0), this.triggerReady());
}, vjs.Player.prototype.load = function() {
    return this.techCall("load"), this;
}, vjs.Player.prototype.currentSrc = function() {
    return this.techGet("currentSrc") || this.cache_.src || "";
}, vjs.Player.prototype.currentType = function() {
    return this.currentType_ || "";
}, vjs.Player.prototype.preload = function(a) {
    return void 0 !== a ? (this.techCall("setPreload", a), this.options_.preload = a, 
    this) : this.techGet("preload");
}, vjs.Player.prototype.autoplay = function(a) {
    return void 0 !== a ? (this.techCall("setAutoplay", a), this.options_.autoplay = a, 
    this) : this.techGet("autoplay", a);
}, vjs.Player.prototype.loop = function(a) {
    return void 0 !== a ? (this.techCall("setLoop", a), this.options_.loop = a, this) : this.techGet("loop");
}, vjs.Player.prototype.poster_, vjs.Player.prototype.poster = function(a) {
    return void 0 === a ? this.poster_ : (a || (a = ""), this.poster_ = a, this.techCall("setPoster", a), 
    this.trigger("posterchange"), this);
}, vjs.Player.prototype.controls_, vjs.Player.prototype.controls = function(a) {
    return void 0 !== a ? (a = !!a, this.controls_ !== a && (this.controls_ = a, a ? (this.removeClass("vjs-controls-disabled"), 
    this.addClass("vjs-controls-enabled"), this.trigger("controlsenabled")) : (this.removeClass("vjs-controls-enabled"), 
    this.addClass("vjs-controls-disabled"), this.trigger("controlsdisabled"))), this) : this.controls_;
}, vjs.Player.prototype.usingNativeControls_, vjs.Player.prototype.usingNativeControls = function(a) {
    return void 0 !== a ? (a = !!a, this.usingNativeControls_ !== a && (this.usingNativeControls_ = a, 
    a ? (this.addClass("vjs-using-native-controls"), this.trigger("usingnativecontrols")) : (this.removeClass("vjs-using-native-controls"), 
    this.trigger("usingcustomcontrols"))), this) : this.usingNativeControls_;
}, vjs.Player.prototype.error_ = null, vjs.Player.prototype.error = function(a) {
    return void 0 === a ? this.error_ : null === a ? (this.error_ = a, this.removeClass("vjs-error"), 
    this) : (a instanceof vjs.MediaError ? this.error_ = a : this.error_ = new vjs.MediaError(a), 
    this.trigger("error"), this.addClass("vjs-error"), vjs.log.error("(CODE:" + this.error_.code + " " + vjs.MediaError.errorTypes[this.error_.code] + ")", this.error_.message, this.error_), 
    this);
}, vjs.Player.prototype.ended = function() {
    return this.techGet("ended");
}, vjs.Player.prototype.seeking = function() {
    return this.techGet("seeking");
}, vjs.Player.prototype.userActivity_ = !0, vjs.Player.prototype.reportUserActivity = function(a) {
    this.userActivity_ = !0;
}, vjs.Player.prototype.userActive_ = !0, vjs.Player.prototype.userActive = function(a) {
    return void 0 !== a ? (a = !!a, a !== this.userActive_ && (this.userActive_ = a, 
    a ? (this.userActivity_ = !0, this.removeClass("vjs-user-inactive"), this.addClass("vjs-user-active"), 
    this.trigger("useractive")) : (this.userActivity_ = !1, this.tech && this.tech.one("mousemove", function(a) {
        a.stopPropagation(), a.preventDefault();
    }), this.removeClass("vjs-user-active"), this.addClass("vjs-user-inactive"), this.trigger("userinactive"))), 
    this) : this.userActive_;
}, vjs.Player.prototype.listenForUserActivity = function() {
    var a, b, c, d, e, f, g, h, i;
    a = vjs.bind(this, this.reportUserActivity), b = function(b) {
        (b.screenX != h || b.screenY != i) && (h = b.screenX, i = b.screenY, a());
    }, c = function() {
        a(), this.clearInterval(d), d = this.setInterval(a, 250);
    }, e = function(b) {
        a(), this.clearInterval(d);
    }, this.on("mousedown", c), this.on("mousemove", b), this.on("mouseup", e), this.on("keydown", a), 
    this.on("keyup", a), f = this.setInterval(function() {
        if (this.userActivity_) {
            this.userActivity_ = !1, this.userActive(!0), this.clearTimeout(g);
            var a = this.options().inactivityTimeout;
            a > 0 && (g = this.setTimeout(function() {
                this.userActivity_ || this.userActive(!1);
            }, a));
        }
    }, 250);
}, vjs.Player.prototype.playbackRate = function(a) {
    return void 0 !== a ? (this.techCall("setPlaybackRate", a), this) : this.tech && this.tech.featuresPlaybackRate ? this.techGet("playbackRate") : 1;
}, vjs.Player.prototype.isAudio_ = !1, vjs.Player.prototype.isAudio = function(a) {
    return void 0 !== a ? (this.isAudio_ = !!a, this) : this.isAudio_;
}, vjs.ControlBar = vjs.Component.extend(), vjs.ControlBar.prototype.options_ = {
    loadEvent: "play",
    children: {
        playToggle: {},
        currentTimeDisplay: {},
        timeDivider: {},
        durationDisplay: {},
        remainingTimeDisplay: {},
        liveDisplay: {},
        progressControl: {},
        fullscreenToggle: {},
        volumeControl: {},
        muteToggle: {},
        playbackRateMenuButton: {}
    }
}, vjs.ControlBar.prototype.createEl = function() {
    return vjs.createEl("div", {
        className: "vjs-control-bar"
    });
}, vjs.LiveDisplay = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b);
    }
}), vjs.LiveDisplay.prototype.createEl = function() {
    var a = vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-live-controls vjs-control"
    });
    return this.contentEl_ = vjs.createEl("div", {
        className: "vjs-live-display",
        innerHTML: '<span class="vjs-control-text">' + this.localize("Stream Type") + "</span>" + this.localize("LIVE"),
        "aria-live": "off"
    }), a.appendChild(this.contentEl_), a;
}, vjs.PlayToggle = vjs.Button.extend({
    init: function(a, b) {
        vjs.Button.call(this, a, b), this.on(a, "play", this.onPlay), this.on(a, "pause", this.onPause);
    }
}), vjs.PlayToggle.prototype.buttonText = "Play", vjs.PlayToggle.prototype.buildCSSClass = function() {
    return "vjs-play-control " + vjs.Button.prototype.buildCSSClass.call(this);
}, vjs.PlayToggle.prototype.onClick = function() {
    this.player_.paused() ? this.player_.play() : this.player_.pause();
}, vjs.PlayToggle.prototype.onPlay = function() {
    this.removeClass("vjs-paused"), this.addClass("vjs-playing"), this.el_.children[0].children[0].innerHTML = this.localize("Pause");
}, vjs.PlayToggle.prototype.onPause = function() {
    this.removeClass("vjs-playing"), this.addClass("vjs-paused"), this.el_.children[0].children[0].innerHTML = this.localize("Play");
}, vjs.CurrentTimeDisplay = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b), this.on(a, "timeupdate", this.updateContent);
    }
}), vjs.CurrentTimeDisplay.prototype.createEl = function() {
    var a = vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-current-time vjs-time-controls vjs-control"
    });
    return this.contentEl_ = vjs.createEl("div", {
        className: "vjs-current-time-display",
        innerHTML: '<span class="vjs-control-text">Current Time </span>0:00',
        "aria-live": "off"
    }), a.appendChild(this.contentEl_), a;
}, vjs.CurrentTimeDisplay.prototype.updateContent = function() {
    var a = this.player_.scrubbing ? this.player_.getCache().currentTime : this.player_.currentTime();
    this.contentEl_.innerHTML = '<span class="vjs-control-text">' + this.localize("Current Time") + "</span> " + vjs.formatTime(a, this.player_.duration());
}, vjs.DurationDisplay = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b), this.on(a, "timeupdate", this.updateContent);
    }
}), vjs.DurationDisplay.prototype.createEl = function() {
    var a = vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-duration vjs-time-controls vjs-control"
    });
    return this.contentEl_ = vjs.createEl("div", {
        className: "vjs-duration-display",
        innerHTML: '<span class="vjs-control-text">' + this.localize("Duration Time") + "</span> 0:00",
        "aria-live": "off"
    }), a.appendChild(this.contentEl_), a;
}, vjs.DurationDisplay.prototype.updateContent = function() {
    var a = this.player_.duration();
    a && (this.contentEl_.innerHTML = '<span class="vjs-control-text">' + this.localize("Duration Time") + "</span> " + vjs.formatTime(a));
}, vjs.TimeDivider = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b);
    }
}), vjs.TimeDivider.prototype.createEl = function() {
    return vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-time-divider",
        innerHTML: "<div><span>/</span></div>"
    });
}, vjs.RemainingTimeDisplay = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b), this.on(a, "timeupdate", this.updateContent);
    }
}), vjs.RemainingTimeDisplay.prototype.createEl = function() {
    var a = vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-remaining-time vjs-time-controls vjs-control"
    });
    return this.contentEl_ = vjs.createEl("div", {
        className: "vjs-remaining-time-display",
        innerHTML: '<span class="vjs-control-text">' + this.localize("Remaining Time") + "</span> -0:00",
        "aria-live": "off"
    }), a.appendChild(this.contentEl_), a;
}, vjs.RemainingTimeDisplay.prototype.updateContent = function() {
    this.player_.duration() && (this.contentEl_.innerHTML = '<span class="vjs-control-text">' + this.localize("Remaining Time") + "</span> -" + vjs.formatTime(this.player_.remainingTime()));
}, vjs.FullscreenToggle = vjs.Button.extend({
    init: function(a, b) {
        vjs.Button.call(this, a, b);
    }
}), vjs.FullscreenToggle.prototype.buttonText = "Fullscreen", vjs.FullscreenToggle.prototype.buildCSSClass = function() {
    return "vjs-fullscreen-control " + vjs.Button.prototype.buildCSSClass.call(this);
}, vjs.FullscreenToggle.prototype.onClick = function() {
    this.player_.isFullscreen() ? (this.player_.exitFullscreen(), this.controlText_.innerHTML = this.localize("Fullscreen")) : (this.player_.requestFullscreen(), 
    this.controlText_.innerHTML = this.localize("Non-Fullscreen"));
}, vjs.ProgressControl = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b);
    }
}), vjs.ProgressControl.prototype.options_ = {
    children: {
        seekBar: {}
    }
}, vjs.ProgressControl.prototype.createEl = function() {
    return vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-progress-control vjs-control"
    });
}, vjs.SeekBar = vjs.Slider.extend({
    init: function(a, b) {
        vjs.Slider.call(this, a, b), this.on(a, "timeupdate", this.updateARIAAttributes), 
        a.ready(vjs.bind(this, this.updateARIAAttributes));
    }
}), vjs.SeekBar.prototype.options_ = {
    children: {
        loadProgressBar: {},
        playProgressBar: {},
        seekHandle: {}
    },
    barName: "playProgressBar",
    handleName: "seekHandle"
}, vjs.SeekBar.prototype.playerEvent = "timeupdate", vjs.SeekBar.prototype.createEl = function() {
    return vjs.Slider.prototype.createEl.call(this, "div", {
        className: "vjs-progress-holder",
        "aria-label": "video progress bar"
    });
}, vjs.SeekBar.prototype.updateARIAAttributes = function() {
    var a = this.player_.scrubbing ? this.player_.getCache().currentTime : this.player_.currentTime();
    this.el_.setAttribute("aria-valuenow", vjs.round(100 * this.getPercent(), 2)), this.el_.setAttribute("aria-valuetext", vjs.formatTime(a, this.player_.duration()));
}, vjs.SeekBar.prototype.getPercent = function() {
    return this.player_.currentTime() / this.player_.duration();
}, vjs.SeekBar.prototype.onMouseDown = function(a) {
    vjs.Slider.prototype.onMouseDown.call(this, a), this.player_.scrubbing = !0, this.videoWasPlaying = !this.player_.paused(), 
    this.player_.pause();
}, vjs.SeekBar.prototype.onMouseMove = function(a) {
    var b = this.calculateDistance(a) * this.player_.duration();
    b == this.player_.duration() && (b -= .1), this.player_.currentTime(b);
}, vjs.SeekBar.prototype.onMouseUp = function(a) {
    vjs.Slider.prototype.onMouseUp.call(this, a), this.player_.scrubbing = !1, this.videoWasPlaying && this.player_.play();
}, vjs.SeekBar.prototype.stepForward = function() {
    this.player_.currentTime(this.player_.currentTime() + 5);
}, vjs.SeekBar.prototype.stepBack = function() {
    this.player_.currentTime(this.player_.currentTime() - 5);
}, vjs.LoadProgressBar = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b), this.on(a, "progress", this.update);
    }
}), vjs.LoadProgressBar.prototype.createEl = function() {
    return vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-load-progress",
        innerHTML: '<span class="vjs-control-text"><span>' + this.localize("Loaded") + "</span>: 0%</span>"
    });
}, vjs.LoadProgressBar.prototype.update = function() {
    var a, b, c, d, e = this.player_.buffered(), f = this.player_.duration(), g = this.player_.bufferedEnd(), h = this.el_.children, i = function(a, b) {
        var c = a / b || 0;
        return 100 * c + "%";
    };
    for (this.el_.style.width = i(g, f), a = 0; a < e.length; a++) b = e.start(a), c = e.end(a), 
    d = h[a], d || (d = this.el_.appendChild(vjs.createEl())), d.style.left = i(b, g), 
    d.style.width = i(c - b, g);
    for (a = h.length; a > e.length; a--) this.el_.removeChild(h[a - 1]);
}, vjs.PlayProgressBar = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b);
    }
}), vjs.PlayProgressBar.prototype.createEl = function() {
    return vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-play-progress",
        innerHTML: '<span class="vjs-control-text"><span>' + this.localize("Progress") + "</span>: 0%</span>"
    });
}, vjs.SeekHandle = vjs.SliderHandle.extend({
    init: function(a, b) {
        vjs.SliderHandle.call(this, a, b), this.on(a, "timeupdate", this.updateContent);
    }
}), vjs.SeekHandle.prototype.defaultValue = "00:00", vjs.SeekHandle.prototype.createEl = function() {
    return vjs.SliderHandle.prototype.createEl.call(this, "div", {
        className: "vjs-seek-handle",
        "aria-live": "off"
    });
}, vjs.SeekHandle.prototype.updateContent = function() {
    var a = this.player_.scrubbing ? this.player_.getCache().currentTime : this.player_.currentTime();
    this.el_.innerHTML = '<span class="vjs-control-text">' + vjs.formatTime(a, this.player_.duration()) + "</span>";
}, vjs.VolumeControl = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b), a.tech && a.tech.featuresVolumeControl === !1 && this.addClass("vjs-hidden"), 
        this.on(a, "loadstart", function() {
            a.tech.featuresVolumeControl === !1 ? this.addClass("vjs-hidden") : this.removeClass("vjs-hidden");
        });
    }
}), vjs.VolumeControl.prototype.options_ = {
    children: {
        volumeBar: {}
    }
}, vjs.VolumeControl.prototype.createEl = function() {
    return vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-volume-control vjs-control"
    });
}, vjs.VolumeBar = vjs.Slider.extend({
    init: function(a, b) {
        vjs.Slider.call(this, a, b), this.on(a, "volumechange", this.updateARIAAttributes), 
        a.ready(vjs.bind(this, this.updateARIAAttributes));
    }
}), vjs.VolumeBar.prototype.updateARIAAttributes = function() {
    this.el_.setAttribute("aria-valuenow", vjs.round(100 * this.player_.volume(), 2)), 
    this.el_.setAttribute("aria-valuetext", vjs.round(100 * this.player_.volume(), 2) + "%");
}, vjs.VolumeBar.prototype.options_ = {
    children: {
        volumeLevel: {},
        volumeHandle: {}
    },
    barName: "volumeLevel",
    handleName: "volumeHandle"
}, vjs.VolumeBar.prototype.playerEvent = "volumechange", vjs.VolumeBar.prototype.createEl = function() {
    return vjs.Slider.prototype.createEl.call(this, "div", {
        className: "vjs-volume-bar",
        "aria-label": "volume level"
    });
}, vjs.VolumeBar.prototype.onMouseMove = function(a) {
    this.player_.muted() && this.player_.muted(!1), this.player_.volume(this.calculateDistance(a));
}, vjs.VolumeBar.prototype.getPercent = function() {
    return this.player_.muted() ? 0 : this.player_.volume();
}, vjs.VolumeBar.prototype.stepForward = function() {
    this.player_.volume(this.player_.volume() + .1);
}, vjs.VolumeBar.prototype.stepBack = function() {
    this.player_.volume(this.player_.volume() - .1);
}, vjs.VolumeLevel = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b);
    }
}), vjs.VolumeLevel.prototype.createEl = function() {
    return vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-volume-level",
        innerHTML: '<span class="vjs-control-text"></span>'
    });
}, vjs.VolumeHandle = vjs.SliderHandle.extend(), vjs.VolumeHandle.prototype.defaultValue = "00:00", 
vjs.VolumeHandle.prototype.createEl = function() {
    return vjs.SliderHandle.prototype.createEl.call(this, "div", {
        className: "vjs-volume-handle"
    });
}, vjs.MuteToggle = vjs.Button.extend({
    init: function(a, b) {
        vjs.Button.call(this, a, b), this.on(a, "volumechange", this.update), a.tech && a.tech.featuresVolumeControl === !1 && this.addClass("vjs-hidden"), 
        this.on(a, "loadstart", function() {
            a.tech.featuresVolumeControl === !1 ? this.addClass("vjs-hidden") : this.removeClass("vjs-hidden");
        });
    }
}), vjs.MuteToggle.prototype.createEl = function() {
    return vjs.Button.prototype.createEl.call(this, "div", {
        className: "vjs-mute-control vjs-control",
        innerHTML: '<div><span class="vjs-control-text">' + this.localize("Mute") + "</span></div>"
    });
}, vjs.MuteToggle.prototype.onClick = function() {
    this.player_.muted(this.player_.muted() ? !1 : !0);
}, vjs.MuteToggle.prototype.update = function() {
    var a = this.player_.volume(), b = 3;
    0 === a || this.player_.muted() ? b = 0 : .33 > a ? b = 1 : .67 > a && (b = 2), 
    this.player_.muted() ? this.el_.children[0].children[0].innerHTML != this.localize("Unmute") && (this.el_.children[0].children[0].innerHTML = this.localize("Unmute")) : this.el_.children[0].children[0].innerHTML != this.localize("Mute") && (this.el_.children[0].children[0].innerHTML = this.localize("Mute"));
    for (var c = 0; 4 > c; c++) vjs.removeClass(this.el_, "vjs-vol-" + c);
    vjs.addClass(this.el_, "vjs-vol-" + b);
}, vjs.VolumeMenuButton = vjs.MenuButton.extend({
    init: function(a, b) {
        vjs.MenuButton.call(this, a, b), this.on(a, "volumechange", this.update), a.tech && a.tech.featuresVolumeControl === !1 && this.addClass("vjs-hidden"), 
        this.on(a, "loadstart", function() {
            a.tech.featuresVolumeControl === !1 ? this.addClass("vjs-hidden") : this.removeClass("vjs-hidden");
        }), this.addClass("vjs-menu-button");
    }
}), vjs.VolumeMenuButton.prototype.createMenu = function() {
    var a = new vjs.Menu(this.player_, {
        contentElType: "div"
    }), b = new vjs.VolumeBar(this.player_, this.options_.volumeBar);
    return b.on("focus", function() {
        a.lockShowing();
    }), b.on("blur", function() {
        a.unlockShowing();
    }), a.addChild(b), a;
}, vjs.VolumeMenuButton.prototype.onClick = function() {
    vjs.MuteToggle.prototype.onClick.call(this), vjs.MenuButton.prototype.onClick.call(this);
}, vjs.VolumeMenuButton.prototype.createEl = function() {
    return vjs.Button.prototype.createEl.call(this, "div", {
        className: "vjs-volume-menu-button vjs-menu-button vjs-control",
        innerHTML: '<div><span class="vjs-control-text">' + this.localize("Mute") + "</span></div>"
    });
}, vjs.VolumeMenuButton.prototype.update = vjs.MuteToggle.prototype.update, vjs.PlaybackRateMenuButton = vjs.MenuButton.extend({
    init: function(a, b) {
        vjs.MenuButton.call(this, a, b), this.updateVisibility(), this.updateLabel(), this.on(a, "loadstart", this.updateVisibility), 
        this.on(a, "ratechange", this.updateLabel);
    }
}), vjs.PlaybackRateMenuButton.prototype.buttonText = "Playback Rate", vjs.PlaybackRateMenuButton.prototype.className = "vjs-playback-rate", 
vjs.PlaybackRateMenuButton.prototype.createEl = function() {
    var a = vjs.MenuButton.prototype.createEl.call(this);
    return this.labelEl_ = vjs.createEl("div", {
        className: "vjs-playback-rate-value",
        innerHTML: 1
    }), a.appendChild(this.labelEl_), a;
}, vjs.PlaybackRateMenuButton.prototype.createMenu = function() {
    var a = new vjs.Menu(this.player()), b = this.player().options().playbackRates;
    if (b) for (var c = b.length - 1; c >= 0; c--) a.addChild(new vjs.PlaybackRateMenuItem(this.player(), {
        rate: b[c] + "x"
    }));
    return a;
}, vjs.PlaybackRateMenuButton.prototype.updateARIAAttributes = function() {
    this.el().setAttribute("aria-valuenow", this.player().playbackRate());
}, vjs.PlaybackRateMenuButton.prototype.onClick = function() {
    for (var a = this.player().playbackRate(), b = this.player().options().playbackRates, c = b[0], d = 0; d < b.length; d++) if (b[d] > a) {
        c = b[d];
        break;
    }
    this.player().playbackRate(c);
}, vjs.PlaybackRateMenuButton.prototype.playbackRateSupported = function() {
    return this.player().tech && this.player().tech.featuresPlaybackRate && this.player().options().playbackRates && this.player().options().playbackRates.length > 0;
}, vjs.PlaybackRateMenuButton.prototype.updateVisibility = function() {
    this.playbackRateSupported() ? this.removeClass("vjs-hidden") : this.addClass("vjs-hidden");
}, vjs.PlaybackRateMenuButton.prototype.updateLabel = function() {
    this.playbackRateSupported() && (this.labelEl_.innerHTML = this.player().playbackRate() + "x");
}, vjs.PlaybackRateMenuItem = vjs.MenuItem.extend({
    contentElType: "button",
    init: function(a, b) {
        var c = this.label = b.rate, d = this.rate = parseFloat(c, 10);
        b.label = c, b.selected = 1 === d, vjs.MenuItem.call(this, a, b), this.on(a, "ratechange", this.update);
    }
}), vjs.PlaybackRateMenuItem.prototype.onClick = function() {
    vjs.MenuItem.prototype.onClick.call(this), this.player().playbackRate(this.rate);
}, vjs.PlaybackRateMenuItem.prototype.update = function() {
    this.selected(this.player().playbackRate() == this.rate);
}, vjs.PosterImage = vjs.Button.extend({
    init: function(a, b) {
        vjs.Button.call(this, a, b), this.update(), a.on("posterchange", vjs.bind(this, this.update));
    }
}), vjs.PosterImage.prototype.dispose = function() {
    this.player().off("posterchange", this.update), vjs.Button.prototype.dispose.call(this);
}, vjs.PosterImage.prototype.createEl = function() {
    var a = vjs.createEl("div", {
        className: "vjs-poster",
        tabIndex: -1
    });
    return vjs.BACKGROUND_SIZE_SUPPORTED || (this.fallbackImg_ = vjs.createEl("img"), 
    a.appendChild(this.fallbackImg_)), a;
}, vjs.PosterImage.prototype.update = function() {
    var a = this.player().poster();
    this.setSrc(a), a ? this.el_.style.display = "" : this.hide();
}, vjs.PosterImage.prototype.setSrc = function(a) {
    var b;
    this.fallbackImg_ ? this.fallbackImg_.src = a : (b = "", a && (b = 'url("' + a + '")'), 
    this.el_.style.backgroundImage = b);
}, vjs.PosterImage.prototype.onClick = function() {
    this.player_.play();
}, vjs.LoadingSpinner = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b);
    }
}), vjs.LoadingSpinner.prototype.createEl = function() {
    return vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-loading-spinner"
    });
}, vjs.BigPlayButton = vjs.Button.extend(), vjs.BigPlayButton.prototype.createEl = function() {
    return vjs.Button.prototype.createEl.call(this, "div", {
        className: "vjs-big-play-button",
        innerHTML: '<span aria-hidden="true"></span>',
        "aria-label": "play video"
    });
}, vjs.BigPlayButton.prototype.onClick = function() {
    this.player_.paused() ? this.player_.play() : this.player_.pause();
}, vjs.ErrorDisplay = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b), this.update(), this.on(a, "error", this.update);
    }
}), vjs.ErrorDisplay.prototype.createEl = function() {
    var a = vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-error-display"
    });
    return this.contentEl_ = vjs.createEl("div"), a.appendChild(this.contentEl_), a;
}, vjs.ErrorDisplay.prototype.update = function() {
    this.player().error() && (this.contentEl_.innerHTML = this.localize(this.player().error().message));
}, vjs.MediaTechController = vjs.Component.extend({
    init: function(a, b, c) {
        b = b || {}, b.reportTouchActivity = !1, vjs.Component.call(this, a, b, c), this.featuresProgressEvents || this.manualProgressOn(), 
        this.featuresTimeupdateEvents || this.manualTimeUpdatesOn(), this.initControlsListeners();
    }
}), vjs.MediaTechController.prototype.initControlsListeners = function() {
    var a, b;
    a = this.player(), b = function() {
        a.controls() && !a.usingNativeControls() && this.addControlsListeners();
    }, this.ready(b), this.on(a, "controlsenabled", b), this.on(a, "controlsdisabled", this.removeControlsListeners), 
    this.ready(function() {
        this.networkState && this.networkState() > 0 && this.player().trigger("loadstart");
    });
}, vjs.MediaTechController.prototype.addControlsListeners = function() {
    var a;
    this.on("mousedown", this.onClick), this.on("touchstart", function(b) {
        a = this.player_.userActive();
    }), this.on("touchmove", function(b) {
        a && this.player().reportUserActivity();
    }), this.on("touchend", function(a) {
        a.preventDefault();
    }), this.emitTapEvents(), this.on("tap", this.onTap);
}, vjs.MediaTechController.prototype.removeControlsListeners = function() {
    this.off("tap"), this.off("touchstart"), this.off("touchmove"), this.off("touchleave"), 
    this.off("touchcancel"), this.off("touchend"), this.off("click"), this.off("mousedown");
}, vjs.MediaTechController.prototype.onClick = function(a) {
    0 === a.button && this.player().controls() && (this.player().paused() ? this.player().play() : this.player().pause());
}, vjs.MediaTechController.prototype.onTap = function() {
    this.player().userActive(!this.player().userActive());
}, vjs.MediaTechController.prototype.manualProgressOn = function() {
    this.manualProgress = !0, this.trackProgress();
}, vjs.MediaTechController.prototype.manualProgressOff = function() {
    this.manualProgress = !1, this.stopTrackingProgress();
}, vjs.MediaTechController.prototype.trackProgress = function() {
    this.progressInterval = this.setInterval(function() {
        var a = this.player().bufferedPercent();
        this.bufferedPercent_ != a && this.player().trigger("progress"), this.bufferedPercent_ = a, 
        1 === a && this.stopTrackingProgress();
    }, 500);
}, vjs.MediaTechController.prototype.stopTrackingProgress = function() {
    this.clearInterval(this.progressInterval);
}, vjs.MediaTechController.prototype.manualTimeUpdatesOn = function() {
    var a = this.player_;
    this.manualTimeUpdates = !0, this.on(a, "play", this.trackCurrentTime), this.on(a, "pause", this.stopTrackingCurrentTime), 
    this.one("timeupdate", function() {
        this.featuresTimeupdateEvents = !0, this.manualTimeUpdatesOff();
    });
}, vjs.MediaTechController.prototype.manualTimeUpdatesOff = function() {
    this.manualTimeUpdates = !1, this.stopTrackingCurrentTime(), this.off("play", this.trackCurrentTime), 
    this.off("pause", this.stopTrackingCurrentTime);
}, vjs.MediaTechController.prototype.trackCurrentTime = function() {
    this.currentTimeInterval && this.stopTrackingCurrentTime(), this.currentTimeInterval = this.setInterval(function() {
        this.player().trigger("timeupdate");
    }, 250);
}, vjs.MediaTechController.prototype.stopTrackingCurrentTime = function() {
    this.clearInterval(this.currentTimeInterval), this.player().trigger("timeupdate");
}, vjs.MediaTechController.prototype.dispose = function() {
    this.manualProgress && this.manualProgressOff(), this.manualTimeUpdates && this.manualTimeUpdatesOff(), 
    vjs.Component.prototype.dispose.call(this);
}, vjs.MediaTechController.prototype.setCurrentTime = function() {
    this.manualTimeUpdates && this.player().trigger("timeupdate");
}, vjs.MediaTechController.prototype.setPoster = function() {}, vjs.MediaTechController.prototype.featuresVolumeControl = !0, 
vjs.MediaTechController.prototype.featuresFullscreenResize = !1, vjs.MediaTechController.prototype.featuresPlaybackRate = !1, 
vjs.MediaTechController.prototype.featuresProgressEvents = !1, vjs.MediaTechController.prototype.featuresTimeupdateEvents = !1, 
vjs.MediaTechController.withSourceHandlers = function(a) {
    a.registerSourceHandler = function(b, c) {
        var d = a.sourceHandlers;
        d || (d = a.sourceHandlers = []), void 0 === c && (c = d.length), d.splice(c, 0, b);
    }, a.selectSourceHandler = function(b) {
        for (var c, d = a.sourceHandlers || [], e = 0; e < d.length; e++) if (c = d[e].canHandleSource(b)) return d[e];
        return null;
    }, a.canPlaySource = function(b) {
        var c = a.selectSourceHandler(b);
        return c ? c.canHandleSource(b) : "";
    }, a.prototype.setSource = function(b) {
        var c = a.selectSourceHandler(b);
        return this.disposeSourceHandler(), this.off("dispose", this.disposeSourceHandler), 
        this.currentSource_ = b, this.sourceHandler_ = c.handleSource(b, this), this.on("dispose", this.disposeSourceHandler), 
        this;
    }, a.prototype.disposeSourceHandler = function() {
        this.sourceHandler_ && this.sourceHandler_.dispose && this.sourceHandler_.dispose();
    };
}, vjs.Html5 = vjs.MediaTechController.extend({
    init: function(a, b, c) {
        vjs.MediaTechController.call(this, a, b, c), this.setupTriggers();
        var d = b.source;
        d && (this.el_.currentSrc !== d.src || a.tag && 3 === a.tag.initNetworkState_) && this.setSource(d), 
        vjs.TOUCH_ENABLED && a.options().nativeControlsForTouch === !0 && this.useNativeControls(), 
        a.ready(function() {
            this.tag && this.options_.autoplay && this.paused() && (delete this.tag.poster, 
            this.play());
        }), this.triggerReady();
    }
}), vjs.Html5.prototype.dispose = function() {
    vjs.Html5.disposeMediaElement(this.el_), vjs.MediaTechController.prototype.dispose.call(this);
}, vjs.Html5.prototype.createEl = function() {
    var a, b = this.player_, c = b.tag;
    c && this.movingMediaElementInDOM !== !1 || (c ? (a = c.cloneNode(!1), vjs.Html5.disposeMediaElement(c), 
    c = a, b.tag = null) : (c = vjs.createEl("video"), vjs.setElementAttributes(c, vjs.obj.merge(b.tagAttributes || {}, {
        id: b.id() + "_html5_api",
        "class": "vjs-tech"
    }))), c.player = b, vjs.insertFirst(c, b.el()));
    for (var d = [ "autoplay", "preload", "loop", "muted" ], e = d.length - 1; e >= 0; e--) {
        var f = d[e], g = {};
        "undefined" != typeof b.options_[f] && (g[f] = b.options_[f]), vjs.setElementAttributes(c, g);
    }
    return c;
}, vjs.Html5.prototype.setupTriggers = function() {
    for (var a = vjs.Html5.Events.length - 1; a >= 0; a--) this.on(vjs.Html5.Events[a], this.eventHandler);
}, vjs.Html5.prototype.eventHandler = function(a) {
    "error" == a.type && this.error() ? this.player().error(this.error().code) : (a.bubbles = !1, 
    this.player().trigger(a));
}, vjs.Html5.prototype.useNativeControls = function() {
    var a, b, c, d, e;
    a = this, b = this.player(), a.setControls(b.controls()), c = function() {
        a.setControls(!0);
    }, d = function() {
        a.setControls(!1);
    }, b.on("controlsenabled", c), b.on("controlsdisabled", d), e = function() {
        b.off("controlsenabled", c), b.off("controlsdisabled", d);
    }, a.on("dispose", e), b.on("usingcustomcontrols", e), b.usingNativeControls(!0);
}, vjs.Html5.prototype.play = function() {
    this.el_.play();
}, vjs.Html5.prototype.pause = function() {
    this.el_.pause();
}, vjs.Html5.prototype.paused = function() {
    return this.el_.paused;
}, vjs.Html5.prototype.currentTime = function() {
    return this.el_.currentTime;
}, vjs.Html5.prototype.setCurrentTime = function(a) {
    try {
        this.el_.currentTime = a;
    } catch (b) {
        vjs.log(b, "Video is not ready. (Video.js)");
    }
}, vjs.Html5.prototype.duration = function() {
    return this.el_.duration || 0;
}, vjs.Html5.prototype.buffered = function() {
    return this.el_.buffered;
}, vjs.Html5.prototype.volume = function() {
    return this.el_.volume;
}, vjs.Html5.prototype.setVolume = function(a) {
    this.el_.volume = a;
}, vjs.Html5.prototype.muted = function() {
    return this.el_.muted;
}, vjs.Html5.prototype.setMuted = function(a) {
    this.el_.muted = a;
}, vjs.Html5.prototype.width = function() {
    return this.el_.offsetWidth;
}, vjs.Html5.prototype.height = function() {
    return this.el_.offsetHeight;
}, vjs.Html5.prototype.supportsFullScreen = function() {
    return "function" != typeof this.el_.webkitEnterFullScreen || !/Android/.test(vjs.USER_AGENT) && /Chrome|Mac OS X 10.5/.test(vjs.USER_AGENT) ? !1 : !0;
}, vjs.Html5.prototype.enterFullScreen = function() {
    var a = this.el_;
    "webkitDisplayingFullscreen" in a && this.one("webkitbeginfullscreen", function() {
        this.player_.isFullscreen(!0), this.one("webkitendfullscreen", function() {
            this.player_.isFullscreen(!1), this.player_.trigger("fullscreenchange");
        }), this.player_.trigger("fullscreenchange");
    }), a.paused && a.networkState <= a.HAVE_METADATA ? (this.el_.play(), this.setTimeout(function() {
        a.pause(), a.webkitEnterFullScreen();
    }, 0)) : a.webkitEnterFullScreen();
}, vjs.Html5.prototype.exitFullScreen = function() {
    this.el_.webkitExitFullScreen();
}, vjs.Html5.prototype.src = function(a) {
    return void 0 === a ? this.el_.src : void this.setSrc(a);
}, vjs.Html5.prototype.setSrc = function(a) {
    this.el_.src = a;
}, vjs.Html5.prototype.load = function() {
    this.el_.load();
}, vjs.Html5.prototype.currentSrc = function() {
    return this.el_.currentSrc;
}, vjs.Html5.prototype.poster = function() {
    return this.el_.poster;
}, vjs.Html5.prototype.setPoster = function(a) {
    this.el_.poster = a;
}, vjs.Html5.prototype.preload = function() {
    return this.el_.preload;
}, vjs.Html5.prototype.setPreload = function(a) {
    this.el_.preload = a;
}, vjs.Html5.prototype.autoplay = function() {
    return this.el_.autoplay;
}, vjs.Html5.prototype.setAutoplay = function(a) {
    this.el_.autoplay = a;
}, vjs.Html5.prototype.controls = function() {
    return this.el_.controls;
}, vjs.Html5.prototype.setControls = function(a) {
    this.el_.controls = !!a;
}, vjs.Html5.prototype.loop = function() {
    return this.el_.loop;
}, vjs.Html5.prototype.setLoop = function(a) {
    this.el_.loop = a;
}, vjs.Html5.prototype.error = function() {
    return this.el_.error;
}, vjs.Html5.prototype.seeking = function() {
    return this.el_.seeking;
}, vjs.Html5.prototype.ended = function() {
    return this.el_.ended;
}, vjs.Html5.prototype.defaultMuted = function() {
    return this.el_.defaultMuted;
}, vjs.Html5.prototype.playbackRate = function() {
    return this.el_.playbackRate;
}, vjs.Html5.prototype.setPlaybackRate = function(a) {
    this.el_.playbackRate = a;
}, vjs.Html5.prototype.networkState = function() {
    return this.el_.networkState;
}, vjs.Html5.isSupported = function() {
    try {
        vjs.TEST_VID.volume = .5;
    } catch (a) {
        return !1;
    }
    return !!vjs.TEST_VID.canPlayType;
}, vjs.MediaTechController.withSourceHandlers(vjs.Html5), vjs.Html5.nativeSourceHandler = {}, 
vjs.Html5.nativeSourceHandler.canHandleSource = function(a) {
    function b(a) {
        try {
            return !!vjs.TEST_VID.canPlayType(a);
        } catch (b) {
            return "";
        }
    }
    var c;
    return a.type ? b(a.type) : (c = a.src.match(/\.([^\/\?]+)(\?[^\/]+)?$/i)[1], b("video/" + c));
}, vjs.Html5.nativeSourceHandler.handleSource = function(a, b) {
    b.setSrc(a.src);
}, vjs.Html5.nativeSourceHandler.dispose = function() {}, vjs.Html5.registerSourceHandler(vjs.Html5.nativeSourceHandler), 
vjs.Html5.canControlVolume = function() {
    var a = vjs.TEST_VID.volume;
    return vjs.TEST_VID.volume = a / 2 + .1, a !== vjs.TEST_VID.volume;
}, vjs.Html5.canControlPlaybackRate = function() {
    var a = vjs.TEST_VID.playbackRate;
    return vjs.TEST_VID.playbackRate = a / 2 + .1, a !== vjs.TEST_VID.playbackRate;
}, vjs.Html5.prototype.featuresVolumeControl = vjs.Html5.canControlVolume(), vjs.Html5.prototype.featuresPlaybackRate = vjs.Html5.canControlPlaybackRate(), 
vjs.Html5.prototype.movingMediaElementInDOM = !vjs.IS_IOS, vjs.Html5.prototype.featuresFullscreenResize = !0, 
vjs.Html5.prototype.featuresProgressEvents = !0, function() {
    var a, b = /^application\/(?:x-|vnd\.apple\.)mpegurl/i, c = /^video\/mp4/i;
    vjs.Html5.patchCanPlayType = function() {
        vjs.ANDROID_VERSION >= 4 && (a || (a = vjs.TEST_VID.constructor.prototype.canPlayType), 
        vjs.TEST_VID.constructor.prototype.canPlayType = function(c) {
            return c && b.test(c) ? "maybe" : a.call(this, c);
        }), vjs.IS_OLD_ANDROID && (a || (a = vjs.TEST_VID.constructor.prototype.canPlayType), 
        vjs.TEST_VID.constructor.prototype.canPlayType = function(b) {
            return b && c.test(b) ? "maybe" : a.call(this, b);
        });
    }, vjs.Html5.unpatchCanPlayType = function() {
        var b = vjs.TEST_VID.constructor.prototype.canPlayType;
        return vjs.TEST_VID.constructor.prototype.canPlayType = a, a = null, b;
    }, vjs.Html5.patchCanPlayType();
}(), vjs.Html5.Events = "loadstart,suspend,abort,error,emptied,stalled,loadedmetadata,loadeddata,canplay,canplaythrough,playing,waiting,seeking,seeked,ended,durationchange,timeupdate,progress,play,pause,ratechange,volumechange".split(","), 
vjs.Html5.disposeMediaElement = function(a) {
    if (a) {
        for (a.player = null, a.parentNode && a.parentNode.removeChild(a); a.hasChildNodes(); ) a.removeChild(a.firstChild);
        a.removeAttribute("src"), "function" == typeof a.load && !function() {
            try {
                a.load();
            } catch (b) {}
        }();
    }
}, vjs.Flash = vjs.MediaTechController.extend({
    init: function(a, b, c) {
        vjs.MediaTechController.call(this, a, b, c);
        var d = b.source, e = b.parentEl, f = this.el_ = vjs.createEl("div", {
            id: a.id() + "_temp_flash"
        }), g = a.id() + "_flash_api", h = a.options_, i = vjs.obj.merge({
            readyFunction: "videojs.Flash.onReady",
            eventProxyFunction: "videojs.Flash.onEvent",
            errorEventProxyFunction: "videojs.Flash.onError",
            autoplay: h.autoplay,
            preload: h.preload,
            loop: h.loop,
            muted: h.muted
        }, b.flashVars), j = vjs.obj.merge({
            wmode: "opaque",
            bgcolor: "#000000"
        }, b.params), k = vjs.obj.merge({
            id: g,
            name: g,
            "class": "vjs-tech"
        }, b.attributes);
        d && this.ready(function() {
            this.setSource(d);
        }), vjs.insertFirst(f, e), b.startTime && this.ready(function() {
            this.load(), this.play(), this.currentTime(b.startTime);
        }), vjs.IS_FIREFOX && this.ready(function() {
            this.on("mousemove", function() {
                this.player().trigger({
                    type: "mousemove",
                    bubbles: !1
                });
            });
        }), a.on("stageclick", a.reportUserActivity), this.el_ = vjs.Flash.embed(b.swf, f, i, j, k);
    }
}), vjs.Flash.prototype.dispose = function() {
    vjs.MediaTechController.prototype.dispose.call(this);
}, vjs.Flash.prototype.play = function() {
    this.el_.vjs_play();
}, vjs.Flash.prototype.pause = function() {
    this.el_.vjs_pause();
}, vjs.Flash.prototype.src = function(a) {
    return void 0 === a ? this.currentSrc() : this.setSrc(a);
}, vjs.Flash.prototype.setSrc = function(a) {
    if (a = vjs.getAbsoluteURL(a), this.el_.vjs_src(a), this.player_.autoplay()) {
        var b = this;
        this.setTimeout(function() {
            b.play();
        }, 0);
    }
}, vjs.Flash.prototype.setCurrentTime = function(a) {
    this.lastSeekTarget_ = a, this.el_.vjs_setProperty("currentTime", a), vjs.MediaTechController.prototype.setCurrentTime.call(this);
}, vjs.Flash.prototype.currentTime = function(a) {
    return this.seeking() ? this.lastSeekTarget_ || 0 : this.el_.vjs_getProperty("currentTime");
}, vjs.Flash.prototype.currentSrc = function() {
    return this.currentSource_ ? this.currentSource_.src : this.el_.vjs_getProperty("currentSrc");
}, vjs.Flash.prototype.load = function() {
    this.el_.vjs_load();
}, vjs.Flash.prototype.poster = function() {
    this.el_.vjs_getProperty("poster");
}, vjs.Flash.prototype.setPoster = function() {}, vjs.Flash.prototype.buffered = function() {
    return vjs.createTimeRange(0, this.el_.vjs_getProperty("buffered"));
}, vjs.Flash.prototype.supportsFullScreen = function() {
    return !1;
}, vjs.Flash.prototype.enterFullScreen = function() {
    return !1;
}, function() {
    function a(a) {
        var b = a.charAt(0).toUpperCase() + a.slice(1);
        d["set" + b] = function(b) {
            return this.el_.vjs_setProperty(a, b);
        };
    }
    function b(a) {
        d[a] = function() {
            return this.el_.vjs_getProperty(a);
        };
    }
    var c, d = vjs.Flash.prototype, e = "rtmpConnection,rtmpStream,preload,defaultPlaybackRate,playbackRate,autoplay,loop,mediaGroup,controller,controls,volume,muted,defaultMuted".split(","), f = "error,networkState,readyState,seeking,initialTime,duration,startOffsetTime,paused,played,seekable,ended,videoTracks,audioTracks,videoWidth,videoHeight,textTracks".split(",");
    for (c = 0; c < e.length; c++) b(e[c]), a(e[c]);
    for (c = 0; c < f.length; c++) b(f[c]);
}(), vjs.Flash.isSupported = function() {
    return vjs.Flash.version()[0] >= 10;
}, vjs.MediaTechController.withSourceHandlers(vjs.Flash), vjs.Flash.nativeSourceHandler = {}, 
vjs.Flash.nativeSourceHandler.canHandleSource = function(a) {
    var b;
    return a.type ? (b = a.type.replace(/;.*/, "").toLowerCase(), b in vjs.Flash.formats ? "maybe" : "") : "";
}, vjs.Flash.nativeSourceHandler.handleSource = function(a, b) {
    b.setSrc(a.src);
}, vjs.Flash.nativeSourceHandler.dispose = function() {}, vjs.Flash.registerSourceHandler(vjs.Flash.nativeSourceHandler), 
vjs.Flash.formats = {
    "video/flv": "FLV",
    "video/x-flv": "FLV",
    "video/mp4": "MP4",
    "video/m4v": "MP4"
}, vjs.Flash.onReady = function(a) {
    var b, c;
    b = vjs.el(a), c = b && b.parentNode && b.parentNode.player, c && (b.player = c, 
    vjs.Flash.checkReady(c.tech));
}, vjs.Flash.checkReady = function(a) {
    a.el() && (a.el().vjs_getProperty ? a.triggerReady() : this.setTimeout(function() {
        vjs.Flash.checkReady(a);
    }, 50));
}, vjs.Flash.onEvent = function(a, b) {
    var c = vjs.el(a).player;
    c.trigger(b);
}, vjs.Flash.onError = function(a, b) {
    var c = vjs.el(a).player, d = "FLASH: " + b;
    "srcnotfound" == b ? c.error({
        code: 4,
        message: d
    }) : c.error(d);
}, vjs.Flash.version = function() {
    var a = "0,0,0";
    try {
        a = new window.ActiveXObject("ShockwaveFlash.ShockwaveFlash").GetVariable("$version").replace(/\D+/g, ",").match(/^,?(.+),?$/)[1];
    } catch (b) {
        try {
            navigator.mimeTypes["application/x-shockwave-flash"].enabledPlugin && (a = (navigator.plugins["Shockwave Flash 2.0"] || navigator.plugins["Shockwave Flash"]).description.replace(/\D+/g, ",").match(/^,?(.+),?$/)[1]);
        } catch (c) {}
    }
    return a.split(",");
}, vjs.Flash.embed = function(a, b, c, d, e) {
    var f = vjs.Flash.getEmbedCode(a, c, d, e), g = vjs.createEl("div", {
        innerHTML: f
    }).childNodes[0], h = b.parentNode;
    b.parentNode.replaceChild(g, b);
    var i = h.childNodes[0];
    return setTimeout(function() {
        i.style.display = "block";
    }, 1e3), g;
}, vjs.Flash.getEmbedCode = function(a, b, c, d) {
    var e = '<object type="application/x-shockwave-flash" ', f = "", g = "", h = "";
    return b && vjs.obj.each(b, function(a, b) {
        f += a + "=" + b + "&amp;";
    }), c = vjs.obj.merge({
        movie: a,
        flashvars: f,
        allowScriptAccess: "always",
        allowNetworking: "all"
    }, c), vjs.obj.each(c, function(a, b) {
        g += '<param name="' + a + '" value="' + b + '" />';
    }), d = vjs.obj.merge({
        data: a,
        width: "100%",
        height: "100%"
    }, d), vjs.obj.each(d, function(a, b) {
        h += a + '="' + b + '" ';
    }), e + h + ">" + g + "</object>";
}, vjs.Flash.streamingFormats = {
    "rtmp/mp4": "MP4",
    "rtmp/flv": "FLV"
}, vjs.Flash.streamFromParts = function(a, b) {
    return a + "&" + b;
}, vjs.Flash.streamToParts = function(a) {
    var b = {
        connection: "",
        stream: ""
    };
    if (!a) return b;
    var c, d = a.indexOf("&");
    return -1 !== d ? c = d + 1 : (d = c = a.lastIndexOf("/") + 1, 0 === d && (d = c = a.length)), 
    b.connection = a.substring(0, d), b.stream = a.substring(c, a.length), b;
}, vjs.Flash.isStreamingType = function(a) {
    return a in vjs.Flash.streamingFormats;
}, vjs.Flash.RTMP_RE = /^rtmp[set]?:\/\//i, vjs.Flash.isStreamingSrc = function(a) {
    return vjs.Flash.RTMP_RE.test(a);
}, vjs.Flash.rtmpSourceHandler = {}, vjs.Flash.rtmpSourceHandler.canHandleSource = function(a) {
    return vjs.Flash.isStreamingType(a.type) || vjs.Flash.isStreamingSrc(a.src) ? "maybe" : "";
}, vjs.Flash.rtmpSourceHandler.handleSource = function(a, b) {
    var c = vjs.Flash.streamToParts(a.src);
    b.setRtmpConnection(c.connection), b.setRtmpStream(c.stream);
}, vjs.Flash.registerSourceHandler(vjs.Flash.rtmpSourceHandler), vjs.MediaLoader = vjs.Component.extend({
    init: function(a, b, c) {
        if (vjs.Component.call(this, a, b, c), a.options_.sources && 0 !== a.options_.sources.length) a.src(a.options_.sources); else for (var d = 0, e = a.options_.techOrder; d < e.length; d++) {
            var f = vjs.capitalize(e[d]), g = window.videojs[f];
            if (g && g.isSupported()) {
                a.loadTech(f);
                break;
            }
        }
    }
}), vjs.Player.prototype.textTracks_, vjs.Player.prototype.textTracks = function() {
    return this.textTracks_ = this.textTracks_ || [], this.textTracks_;
}, vjs.Player.prototype.addTextTrack = function(a, b, c, d) {
    var e = this.textTracks_ = this.textTracks_ || [];
    d = d || {}, d.kind = a, d.label = b, d.language = c;
    var f = vjs.capitalize(a || "subtitles"), g = new window.videojs[f + "Track"](this, d);
    return e.push(g), g.dflt() && this.ready(function() {
        this.setTimeout(function() {
            g.player().showTextTrack(g.id());
        }, 0);
    }), g;
}, vjs.Player.prototype.addTextTracks = function(a) {
    for (var b, c = 0; c < a.length; c++) b = a[c], this.addTextTrack(b.kind, b.label, b.language, b);
    return this;
}, vjs.Player.prototype.showTextTrack = function(a, b) {
    for (var c, d, e, f = this.textTracks_, g = 0, h = f.length; h > g; g++) c = f[g], 
    c.id() === a ? (c.show(), d = c) : b && c.kind() == b && c.mode() > 0 && c.disable();
    return e = d ? d.kind() : b ? b : !1, e && this.trigger(e + "trackchange"), this;
}, vjs.TextTrack = vjs.Component.extend({
    init: function(a, b) {
        vjs.Component.call(this, a, b), this.id_ = b.id || "vjs_" + b.kind + "_" + b.language + "_" + vjs.guid++, 
        this.src_ = b.src, this.dflt_ = b["default"] || b.dflt, this.title_ = b.title, this.language_ = b.srclang, 
        this.label_ = b.label, this.cues_ = [], this.activeCues_ = [], this.readyState_ = 0, 
        this.mode_ = 0, a.on("dispose", vjs.bind(this, this.deactivate, this.id_));
    }
}), vjs.TextTrack.prototype.kind_, vjs.TextTrack.prototype.kind = function() {
    return this.kind_;
}, vjs.TextTrack.prototype.src_, vjs.TextTrack.prototype.src = function() {
    return this.src_;
}, vjs.TextTrack.prototype.dflt_, vjs.TextTrack.prototype.dflt = function() {
    return this.dflt_;
}, vjs.TextTrack.prototype.title_, vjs.TextTrack.prototype.title = function() {
    return this.title_;
}, vjs.TextTrack.prototype.language_, vjs.TextTrack.prototype.language = function() {
    return this.language_;
}, vjs.TextTrack.prototype.label_, vjs.TextTrack.prototype.label = function() {
    return this.label_;
}, vjs.TextTrack.prototype.cues_, vjs.TextTrack.prototype.cues = function() {
    return this.cues_;
}, vjs.TextTrack.prototype.activeCues_, vjs.TextTrack.prototype.activeCues = function() {
    return this.activeCues_;
}, vjs.TextTrack.prototype.readyState_, vjs.TextTrack.prototype.readyState = function() {
    return this.readyState_;
}, vjs.TextTrack.prototype.mode_, vjs.TextTrack.prototype.mode = function() {
    return this.mode_;
}, vjs.TextTrack.prototype.createEl = function() {
    return vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-" + this.kind_ + " vjs-text-track"
    });
}, vjs.TextTrack.prototype.show = function() {
    this.activate(), this.mode_ = 2, vjs.Component.prototype.show.call(this);
}, vjs.TextTrack.prototype.hide = function() {
    this.activate(), this.mode_ = 1, vjs.Component.prototype.hide.call(this);
}, vjs.TextTrack.prototype.disable = function() {
    2 == this.mode_ && this.hide(), this.deactivate(), this.mode_ = 0;
}, vjs.TextTrack.prototype.activate = function() {
    0 === this.readyState_ && this.load(), 0 === this.mode_ && (this.player_.on("timeupdate", vjs.bind(this, this.update, this.id_)), 
    this.player_.on("ended", vjs.bind(this, this.reset, this.id_)), ("captions" === this.kind_ || "subtitles" === this.kind_) && this.player_.getChild("textTrackDisplay").addChild(this));
}, vjs.TextTrack.prototype.deactivate = function() {
    this.player_.off("timeupdate", vjs.bind(this, this.update, this.id_)), this.player_.off("ended", vjs.bind(this, this.reset, this.id_)), 
    this.reset(), this.player_.getChild("textTrackDisplay").removeChild(this);
}, vjs.TextTrack.prototype.load = function() {
    0 === this.readyState_ && (this.readyState_ = 1, vjs.xhr(this.src_, vjs.bind(this, function(a, b, c) {
        return a ? this.onError(a) : void this.parseCues(c);
    })));
}, vjs.TextTrack.prototype.onError = function(a) {
    this.error = a, this.readyState_ = 3, this.trigger("error");
}, vjs.TextTrack.prototype.parseCues = function(a) {
    for (var b, c, d, e, f = a.split("\n"), g = "", h = 1, i = f.length; i > h; h++) if (g = vjs.trim(f[h])) {
        for (-1 == g.indexOf("-->") ? (e = g, g = vjs.trim(f[++h])) : e = this.cues_.length, 
        b = {
            id: e,
            index: this.cues_.length
        }, c = g.split(/[\t ]+/), b.startTime = this.parseCueTime(c[0]), b.endTime = this.parseCueTime(c[2]), 
        d = []; f[++h] && (g = vjs.trim(f[h])); ) d.push(g);
        b.text = d.join("<br/>"), this.cues_.push(b);
    }
    this.readyState_ = 2, this.trigger("loaded");
}, vjs.TextTrack.prototype.parseCueTime = function(a) {
    var b, c, d, e, f, g = a.split(":"), h = 0;
    return 3 == g.length ? (b = g[0], c = g[1], d = g[2]) : (b = 0, c = g[0], d = g[1]), 
    d = d.split(/\s+/), e = d.splice(0, 1)[0], e = e.split(/\.|,/), f = parseFloat(e[1]), 
    e = e[0], h += 3600 * parseFloat(b), h += 60 * parseFloat(c), h += parseFloat(e), 
    f && (h += f / 1e3), h;
}, vjs.TextTrack.prototype.update = function() {
    if (this.cues_.length > 0) {
        var a = this.player_.options().trackTimeOffset || 0, b = this.player_.currentTime() + a;
        if (void 0 === this.prevChange || b < this.prevChange || this.nextChange <= b) {
            var c, d, e, f, g = this.cues_, h = this.player_.duration(), i = 0, j = !1, k = [];
            for (b >= this.nextChange || void 0 === this.nextChange ? f = void 0 !== this.firstActiveIndex ? this.firstActiveIndex : 0 : (j = !0, 
            f = void 0 !== this.lastActiveIndex ? this.lastActiveIndex : g.length - 1); ;) {
                if (e = g[f], e.endTime <= b) i = Math.max(i, e.endTime), e.active && (e.active = !1); else if (b < e.startTime) {
                    if (h = Math.min(h, e.startTime), e.active && (e.active = !1), !j) break;
                } else j ? (k.splice(0, 0, e), void 0 === d && (d = f), c = f) : (k.push(e), void 0 === c && (c = f), 
                d = f), h = Math.min(h, e.endTime), i = Math.max(i, e.startTime), e.active = !0;
                if (j) {
                    if (0 === f) break;
                    f--;
                } else {
                    if (f === g.length - 1) break;
                    f++;
                }
            }
            this.activeCues_ = k, this.nextChange = h, this.prevChange = i, this.firstActiveIndex = c, 
            this.lastActiveIndex = d, this.updateDisplay(), this.trigger("cuechange");
        }
    }
}, vjs.TextTrack.prototype.updateDisplay = function() {
    for (var a = this.activeCues_, b = "", c = 0, d = a.length; d > c; c++) b += '<span class="vjs-tt-cue">' + a[c].text + "</span>";
    this.el_.innerHTML = b;
}, vjs.TextTrack.prototype.reset = function() {
    this.nextChange = 0, this.prevChange = this.player_.duration(), this.firstActiveIndex = 0, 
    this.lastActiveIndex = 0;
}, vjs.CaptionsTrack = vjs.TextTrack.extend(), vjs.CaptionsTrack.prototype.kind_ = "captions", 
vjs.SubtitlesTrack = vjs.TextTrack.extend(), vjs.SubtitlesTrack.prototype.kind_ = "subtitles", 
vjs.ChaptersTrack = vjs.TextTrack.extend(), vjs.ChaptersTrack.prototype.kind_ = "chapters", 
vjs.TextTrackDisplay = vjs.Component.extend({
    init: function(a, b, c) {
        vjs.Component.call(this, a, b, c), a.options_.tracks && a.options_.tracks.length > 0 && this.player_.addTextTracks(a.options_.tracks);
    }
}), vjs.TextTrackDisplay.prototype.createEl = function() {
    return vjs.Component.prototype.createEl.call(this, "div", {
        className: "vjs-text-track-display"
    });
}, vjs.TextTrackMenuItem = vjs.MenuItem.extend({
    init: function(a, b) {
        var c = this.track = b.track;
        b.label = c.label(), b.selected = c.dflt(), vjs.MenuItem.call(this, a, b), this.on(a, c.kind() + "trackchange", this.update);
    }
}), vjs.TextTrackMenuItem.prototype.onClick = function() {
    vjs.MenuItem.prototype.onClick.call(this), this.player_.showTextTrack(this.track.id_, this.track.kind());
}, vjs.TextTrackMenuItem.prototype.update = function() {
    this.selected(2 == this.track.mode());
}, vjs.OffTextTrackMenuItem = vjs.TextTrackMenuItem.extend({
    init: function(a, b) {
        b.track = {
            kind: function() {
                return b.kind;
            },
            player: a,
            label: function() {
                return b.kind + " off";
            },
            dflt: function() {
                return !1;
            },
            mode: function() {
                return !1;
            }
        }, vjs.TextTrackMenuItem.call(this, a, b), this.selected(!0);
    }
}), vjs.OffTextTrackMenuItem.prototype.onClick = function() {
    vjs.TextTrackMenuItem.prototype.onClick.call(this), this.player_.showTextTrack(this.track.id_, this.track.kind());
}, vjs.OffTextTrackMenuItem.prototype.update = function() {
    for (var a, b = this.player_.textTracks(), c = 0, d = b.length, e = !0; d > c; c++) a = b[c], 
    a.kind() == this.track.kind() && 2 == a.mode() && (e = !1);
    this.selected(e);
}, vjs.TextTrackButton = vjs.MenuButton.extend({
    init: function(a, b) {
        vjs.MenuButton.call(this, a, b), this.items.length <= 1 && this.hide();
    }
}), vjs.TextTrackButton.prototype.createItems = function() {
    var a, b = [];
    b.push(new vjs.OffTextTrackMenuItem(this.player_, {
        kind: this.kind_
    }));
    for (var c = 0; c < this.player_.textTracks().length; c++) a = this.player_.textTracks()[c], 
    a.kind() === this.kind_ && b.push(new vjs.TextTrackMenuItem(this.player_, {
        track: a
    }));
    return b;
}, vjs.CaptionsButton = vjs.TextTrackButton.extend({
    init: function(a, b, c) {
        vjs.TextTrackButton.call(this, a, b, c), this.el_.setAttribute("aria-label", "Captions Menu");
    }
}), vjs.CaptionsButton.prototype.kind_ = "captions", vjs.CaptionsButton.prototype.buttonText = "Captions", 
vjs.CaptionsButton.prototype.className = "vjs-captions-button", vjs.SubtitlesButton = vjs.TextTrackButton.extend({
    init: function(a, b, c) {
        vjs.TextTrackButton.call(this, a, b, c), this.el_.setAttribute("aria-label", "Subtitles Menu");
    }
}), vjs.SubtitlesButton.prototype.kind_ = "subtitles", vjs.SubtitlesButton.prototype.buttonText = "Subtitles", 
vjs.SubtitlesButton.prototype.className = "vjs-subtitles-button", vjs.ChaptersButton = vjs.TextTrackButton.extend({
    init: function(a, b, c) {
        vjs.TextTrackButton.call(this, a, b, c), this.el_.setAttribute("aria-label", "Chapters Menu");
    }
}), vjs.ChaptersButton.prototype.kind_ = "chapters", vjs.ChaptersButton.prototype.buttonText = "Chapters", 
vjs.ChaptersButton.prototype.className = "vjs-chapters-button", vjs.ChaptersButton.prototype.createItems = function() {
    for (var a, b = [], c = 0; c < this.player_.textTracks().length; c++) a = this.player_.textTracks()[c], 
    a.kind() === this.kind_ && b.push(new vjs.TextTrackMenuItem(this.player_, {
        track: a
    }));
    return b;
}, vjs.ChaptersButton.prototype.createMenu = function() {
    for (var a, b, c = this.player_.textTracks(), d = 0, e = c.length, f = this.items = []; e > d; d++) if (a = c[d], 
    a.kind() == this.kind_) {
        if (0 !== a.readyState()) {
            b = a;
            break;
        }
        a.load(), a.on("loaded", vjs.bind(this, this.createMenu));
    }
    var g = this.menu;
    if (void 0 === g && (g = new vjs.Menu(this.player_), g.contentEl().appendChild(vjs.createEl("li", {
        className: "vjs-menu-title",
        innerHTML: vjs.capitalize(this.kind_),
        tabindex: -1
    }))), b) {
        var h, i, j = b.cues_;
        for (d = 0, e = j.length; e > d; d++) h = j[d], i = new vjs.ChaptersTrackMenuItem(this.player_, {
            track: b,
            cue: h
        }), f.push(i), g.addChild(i);
        this.addChild(g);
    }
    return this.items.length > 0 && this.show(), g;
}, vjs.ChaptersTrackMenuItem = vjs.MenuItem.extend({
    init: function(a, b) {
        var c = this.track = b.track, d = this.cue = b.cue, e = a.currentTime();
        b.label = d.text, b.selected = d.startTime <= e && e < d.endTime, vjs.MenuItem.call(this, a, b), 
        c.on("cuechange", vjs.bind(this, this.update));
    }
}), vjs.ChaptersTrackMenuItem.prototype.onClick = function() {
    vjs.MenuItem.prototype.onClick.call(this), this.player_.currentTime(this.cue.startTime), 
    this.update(this.cue.startTime);
}, vjs.ChaptersTrackMenuItem.prototype.update = function() {
    var a = this.cue, b = this.player_.currentTime();
    this.selected(a.startTime <= b && b < a.endTime);
}, vjs.obj.merge(vjs.ControlBar.prototype.options_.children, {
    subtitlesButton: {},
    captionsButton: {},
    chaptersButton: {}
}), vjs.JSON, "undefined" != typeof window.JSON && "function" == typeof window.JSON.parse) vjs.JSON = window.JSON; else {
    vjs.JSON = {};
    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
    vjs.JSON.parse = function(text, reviver) {
        function walk(a, b) {
            var c, d, e = a[b];
            if (e && "object" == typeof e) for (c in e) Object.prototype.hasOwnProperty.call(e, c) && (d = walk(e, c), 
            void 0 !== d ? e[c] = d : delete e[c]);
            return reviver.call(a, b, e);
        }
        var j;
        if (text = String(text), cx.lastIndex = 0, cx.test(text) && (text = text.replace(cx, function(a) {
            return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
        })), /^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return j = eval("(" + text + ")"), 
        "function" == typeof reviver ? walk({
            "": j
        }, "") : j;
        throw new SyntaxError("JSON.parse(): invalid or malformed JSON data");
    };
}

vjs.autoSetup = function() {
    var a, b, c, d, e, f = document.getElementsByTagName("video"), g = document.getElementsByTagName("audio"), h = [];
    if (f && f.length > 0) for (d = 0, e = f.length; e > d; d++) h.push(f[d]);
    if (g && g.length > 0) for (d = 0, e = g.length; e > d; d++) h.push(g[d]);
    if (h && h.length > 0) for (d = 0, e = h.length; e > d; d++) {
        if (b = h[d], !b || !b.getAttribute) {
            vjs.autoSetupTimeout(1);
            break;
        }
        void 0 === b.player && (a = b.getAttribute("data-setup"), null !== a && (c = videojs(b)));
    } else vjs.windowLoaded || vjs.autoSetupTimeout(1);
}, vjs.autoSetupTimeout = function(a) {
    setTimeout(vjs.autoSetup, a);
}, "complete" === document.readyState ? vjs.windowLoaded = !0 : vjs.one(window, "load", function() {
    vjs.windowLoaded = !0;
}), vjs.autoSetupTimeout(1), vjs.plugin = function(a, b) {
    vjs.Player.prototype[a] = b;
}, function(a, b, c, d) {
    "use strict";
    var e = function(a) {
        var b, c, d;
        for (c = 1; c < arguments.length; c++) {
            b = arguments[c];
            for (d in b) b.hasOwnProperty(d) && (a[d] = b[d]);
        }
        return a;
    }, f = function(a, b, c) {
        var d, e, f = Object.prototype.toString.call(b), g = function(a, b, c) {
            if (a.addEventListener) a.addEventListener(b, c); else if (a.on) a.on(b, c); else {
                if (!a.attachEvent) throw new Error("object has no mechanism for adding event listeners");
                a.attachEvent("on" + b, c);
            }
        };
        switch (f) {
          case "[object String]":
            g(a, b, c);
            break;

          case "[object Array]":
            for (d = 0, e = b.length; e > d; d++) g(a, b[d], c);
            break;

          case "[object Object]":
            for (d in b) b.hasOwnProperty(d) && g(a, d, b[d]);
            break;

          default:
            throw new Error("Unrecognized events parameter type: " + f);
        }
        return a;
    }, g = function(b) {
        return (a.setImmediate || a.requestAnimationFrame || a.mozRequestAnimationFrame || a.webkitRequestAnimationFrame || a.setTimeout)(b, 0);
    }, h = function(b) {
        return (a.clearImmediate || a.cancelAnimationFrame || a.webkitCancelAnimationFrame || a.mozCancelAnimationFrame || a.clearTimeout)(b);
    }, i = function(a) {
        a.ads.cancelPlayTimeout || (a.ads.cancelPlayTimeout = g(function() {
            a.ads.cancelPlayTimeout = null, a.paused() || a.pause();
        }));
    }, j = function(a) {
        var b = a.el().querySelector(".vjs-tech"), c = {
            src: a.currentSrc(),
            currentTime: a.currentTime(),
            play: !0
        };
        return b && (c.nativePoster = b.poster), c;
    }, k = function(a, b) {
        for (var c = a.className.split(/\s+/), d = c.length, e = []; d--; ) c[d] !== b && e.push(c[d]);
        a.className = e.join(" ");
    }, l = function(a, b) {
        var c = a.el().querySelector(".vjs-tech"), e = 20, f = function() {
            a.currentTime(b.currentTime), b.play && a.play();
        }, g = function() {
            return c.seekable === d ? void f() : c.seekable.length > 0 ? void f() : void (e-- && setTimeout(g, 50));
        };
        return b.nativePoster && (c.poster = b.nativePoster), a.currentSrc() === b.src ? void a.play() : (a.src(b.src), 
        a.load(), void a.one("loadedmetadata", g));
    }, m = function(a) {
        var b = a.el().querySelector(".vjs-tech");
        b && b.removeAttribute("poster");
    }, n = {
        timeout: 5e3,
        prerollTimeout: 100,
        debug: !1
    }, o = function(b) {
        var d, o = this, p = e({}, n, b || {});
        o.ads = {
            state: "content-set",
            startLinearAdMode: function() {
                o.trigger("adstart");
            },
            endLinearAdMode: function() {
                o.trigger("adend");
            }
        }, d = function(b) {
            var c = {
                "content-set": {
                    events: {
                        adsready: function() {
                            this.state = "ads-ready";
                        },
                        play: function() {
                            this.state = "ads-ready?", this.snapshot = j(o), i(o), m(o);
                        }
                    }
                },
                "ads-ready": {
                    events: {
                        play: function() {
                            this.state = "preroll?", i(o);
                        }
                    }
                },
                "preroll?": {
                    enter: function() {
                        this.snapshot = j(o), m(o), o.el().className += " vjs-ad-loading", o.ads.timeout = a.setTimeout(function() {
                            o.trigger("adtimeout");
                        }, p.prerollTimeout), o.trigger("readyforpreroll");
                    },
                    leave: function() {
                        a.clearTimeout(o.ads.timeout), h(o.ads.cancelPlayTimeout), o.ads.cancelPlayTimeout = null, 
                        k(o.el(), "vjs-ad-loading");
                    },
                    events: {
                        play: function() {
                            i(o);
                        },
                        adstart: function() {
                            this.state = "ad-playback", o.el().className += " vjs-ad-playing";
                        },
                        adtimeout: function() {
                            this.state = "content-playback", o.play();
                        }
                    }
                },
                "ads-ready?": {
                    enter: function() {
                        o.el().className += " vjs-ad-loading", o.ads.timeout = a.setTimeout(function() {
                            o.trigger("adtimeout");
                        }, p.timeout);
                    },
                    leave: function() {
                        a.clearTimeout(o.ads.timeout), k(o.el(), "vjs-ad-loading");
                    },
                    events: {
                        play: function() {
                            i(o);
                        },
                        adsready: function() {
                            this.state = "preroll?";
                        },
                        adtimeout: function() {
                            this.state = "ad-timeout-playback";
                        }
                    }
                },
                "ad-timeout-playback": {
                    enter: function() {
                        l(o, this.snapshot);
                    },
                    events: {
                        adsready: function() {
                            o.paused() ? this.state = "ads-ready" : this.state = "preroll?";
                        },
                        contentupdate: function() {
                            o.paused() ? this.state = "content-set" : this.state = "ads-ready?";
                        }
                    }
                },
                "ad-playback": {
                    events: {
                        adend: function() {
                            this.state = "content-playback", k(o.el(), "vjs-ad-playing"), l(o, this.snapshot);
                        }
                    }
                },
                "content-playback": {
                    events: {
                        adstart: function() {
                            this.state = "ad-playback", this.snapshot = j(o), o.el().className += " vjs-ad-playing", 
                            m(o);
                        },
                        contentupdate: function() {
                            o.paused() ? this.state = "content-set" : this.state = "ads-ready?";
                        }
                    }
                }
            };
            !function(a) {
                var d = function() {};
                (c[a].events[b.type] || d).apply(o.ads), a !== o.ads.state && ((c[a].leave || d).apply(o.ads), 
                (c[o.ads.state].enter || d).apply(o.ads), p.debug && videojs.log("ads", a + " -> " + o.ads.state));
            }(o.ads.state);
        }, f(o, c.Html5.Events.concat([ "adtimeout", "contentupdate", "adsready", "adstart", "adend" ]), d), 
        function() {
            var a, b = function() {
                var b;
                "ad-playback" !== o.ads.state && (b = o.currentSrc(), b !== a && (o.trigger({
                    type: "contentupdate",
                    oldValue: a,
                    newValue: b
                }), a = b));
            };
            o.on("loadstart", b), g(b);
        }(), o.paused() || d({
            type: "play"
        });
    };
    c.plugin("ads", o);
}(window, document, videojs), function(a) {
    if ("function" == typeof bootstrap) bootstrap("dmvast", a); else if ("object" == typeof exports) module.exports = a(); else if ("function" == typeof define && define.amd) define(a); else if ("undefined" != typeof ses) {
        if (!ses.ok()) return;
        ses.makeDMVAST = a;
    } else "undefined" != typeof window ? window.DMVAST = a() : global.DMVAST = a();
}(function() {
    return function(a, b, c) {
        function d(c, f) {
            if (!b[c]) {
                if (!a[c]) {
                    var g = "function" == typeof require && require;
                    if (!f && g) return g(c, !0);
                    if (e) return e(c, !0);
                    throw new Error("Cannot find module '" + c + "'");
                }
                var h = b[c] = {
                    exports: {}
                };
                a[c][0].call(h.exports, function(b) {
                    var e = a[c][1][b];
                    return d(e ? e : b);
                }, h, h.exports);
            }
            return b[c].exports;
        }
        for (var e = "function" == typeof require && require, f = 0; f < c.length; f++) d(c[f]);
        return d;
    }({
        1: [ function(a, b, c) {
            b.exports = {
                client: a("./client.coffee"),
                tracker: a("./tracker.coffee"),
                parser: a("./parser.coffee"),
                util: a("./util.coffee")
            };
        }, {
            "./client.coffee": 2,
            "./tracker.coffee": 3,
            "./parser.coffee": 4,
            "./util.coffee": 5
        } ],
        2: [ function(a, b, c) {
            var d, e, f;
            e = a("./parser.coffee"), f = a("./util.coffee"), d = function() {
                function a() {}
                return a.cappingFreeLunch = 0, a.cappingMinimumTimeInterval = 0, a.timeout = 0, 
                a.get = function(a, b) {
                    var c;
                    return c = +new Date(), this.totalCallsTimeout < c ? (this.totalCalls = 1, this.totalCallsTimeout = c + 36e5) : this.totalCalls++, 
                    this.cappingFreeLunch >= this.totalCalls ? void b(null) : c - this.lastSuccessfullAd < this.cappingMinimumTimeInterval ? void b(null) : e.parse(a, function(a) {
                        return b(a);
                    });
                }, function() {
                    var b, c;
                    c = f.storage, b = Object.defineProperty, [ "lastSuccessfullAd", "totalCalls", "totalCallsTimeout" ].forEach(function(d) {
                        b(a, d, {
                            get: function() {
                                return c.getItem(d);
                            },
                            set: function(a) {
                                return c.setItem(d, a);
                            },
                            configurable: !1,
                            enumerable: !0
                        });
                    }), null == a.totalCalls && (a.totalCalls = 0), null == a.totalCallsTimeout && (a.totalCallsTimeout = 0);
                }(), a;
            }(), b.exports = d;
        }, {
            "./parser.coffee": 4,
            "./util.coffee": 5
        } ],
        5: [ function(a, b, c) {
            var d;
            d = function() {
                function a() {}
                return a.track = function(a, b) {
                    var c, d, e, f, g, h;
                    for (d = this.resolveURLTemplates(a, b), h = [], f = 0, g = d.length; g > f; f++) c = d[f], 
                    "undefined" != typeof window && null !== window && (e = new Image(), h.push(e.src = c));
                    return h;
                }, a.resolveURLTemplates = function(a, b) {
                    var c, d, e, f, g, h, i, j, k, l, m;
                    d = [], null == b && (b = {}), "CACHEBUSTING" in b || (b.CACHEBUSTING = Math.round(1e10 * Math.random())), 
                    b.random = b.CACHEBUSTING;
                    for (i = 0, k = a.length; k > i; i++) {
                        for (c = a[i], g = c, m = [ "CACHEBUSTING", "random", "CONTENTPLAYHEAD", "ASSETURI", "ERRORCODE" ], 
                        j = 0, l = m.length; l > j; j++) f = m[j], e = "[" + f + "]", h = b[f], null !== g && (g = g.replace(e, h));
                        d.push(g);
                    }
                    return d;
                }, a.storage = function() {
                    var a, b, c;
                    try {
                        c = "undefined" != typeof window && null !== window ? window.localStorage || window.sessionStorage : null;
                    } catch (d) {
                        c = null;
                    }
                    return b = function(a) {
                        var b;
                        try {
                            if (b = "__VASTUtil__", a.setItem(b, b), a.getItem(b) !== b) return !0;
                        } catch (c) {
                            return !0;
                        }
                        return !1;
                    }, (null == c || b(c)) && (a = {}, c = {
                        length: 0,
                        getItem: function(b) {
                            return a[b];
                        },
                        setItem: function(b, c) {
                            a[b] = c, this.length = Object.keys(a).length;
                        },
                        removeItem: function(b) {
                            delete a[b], this.length = Object.keys(a).length;
                        },
                        clear: function() {
                            a = {}, this.length = 0;
                        }
                    }), c;
                }(), a;
            }(), b.exports = d;
        }, {} ],
        6: [ function(a, b, c) {
            var d = b.exports = {};
            d.nextTick = function() {
                var a = "undefined" != typeof window && window.setImmediate, b = "undefined" != typeof window && window.postMessage && window.addEventListener;
                if (a) return function(a) {
                    return window.setImmediate(a);
                };
                if (b) {
                    var c = [];
                    return window.addEventListener("message", function(a) {
                        if (a.source === window && "process-tick" === a.data && (a.stopPropagation(), c.length > 0)) {
                            var b = c.shift();
                            b();
                        }
                    }, !0), function(a) {
                        c.push(a), window.postMessage("process-tick", "*");
                    };
                }
                return function(a) {
                    setTimeout(a, 0);
                };
            }(), d.title = "browser", d.browser = !0, d.env = {}, d.argv = [], d.binding = function(a) {
                throw new Error("process.binding is not supported");
            }, d.cwd = function() {
                return "/";
            }, d.chdir = function(a) {
                throw new Error("process.chdir is not supported");
            };
        }, {} ],
        7: [ function(a, b, c) {
            !function(a) {
                function b(a, b) {
                    if (a.indexOf) return a.indexOf(b);
                    for (var c = 0; c < a.length; c++) if (b === a[c]) return c;
                    return -1;
                }
                a.EventEmitter || (a.EventEmitter = function() {});
                var d = c.EventEmitter = a.EventEmitter, e = "function" == typeof Array.isArray ? Array.isArray : function(a) {
                    return "[object Array]" === Object.prototype.toString.call(a);
                }, f = 10;
                d.prototype.setMaxListeners = function(a) {
                    this._events || (this._events = {}), this._events.maxListeners = a;
                }, d.prototype.emit = function(a) {
                    if ("error" === a && (!this._events || !this._events.error || e(this._events.error) && !this._events.error.length)) throw arguments[1] instanceof Error ? arguments[1] : new Error("Uncaught, unspecified 'error' event.");
                    if (!this._events) return !1;
                    var b = this._events[a];
                    if (!b) return !1;
                    if ("function" == typeof b) {
                        switch (arguments.length) {
                          case 1:
                            b.call(this);
                            break;

                          case 2:
                            b.call(this, arguments[1]);
                            break;

                          case 3:
                            b.call(this, arguments[1], arguments[2]);
                            break;

                          default:
                            var c = Array.prototype.slice.call(arguments, 1);
                            b.apply(this, c);
                        }
                        return !0;
                    }
                    if (e(b)) {
                        for (var c = Array.prototype.slice.call(arguments, 1), d = b.slice(), f = 0, g = d.length; g > f; f++) d[f].apply(this, c);
                        return !0;
                    }
                    return !1;
                }, d.prototype.addListener = function(a, b) {
                    if ("function" != typeof b) throw new Error("addListener only takes instances of Function");
                    if (this._events || (this._events = {}), this.emit("newListener", a, b), this._events[a]) if (e(this._events[a])) {
                        if (!this._events[a].warned) {
                            var c;
                            c = void 0 !== this._events.maxListeners ? this._events.maxListeners : f, c && c > 0 && this._events[a].length > c && (this._events[a].warned = !0, 
                            console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[a].length), 
                            console.trace());
                        }
                        this._events[a].push(b);
                    } else this._events[a] = [ this._events[a], b ]; else this._events[a] = b;
                    return this;
                }, d.prototype.on = d.prototype.addListener, d.prototype.once = function(a, b) {
                    var c = this;
                    return c.on(a, function d() {
                        c.removeListener(a, d), b.apply(this, arguments);
                    }), this;
                }, d.prototype.removeListener = function(a, c) {
                    if ("function" != typeof c) throw new Error("removeListener only takes instances of Function");
                    if (!this._events || !this._events[a]) return this;
                    var d = this._events[a];
                    if (e(d)) {
                        var f = b(d, c);
                        if (0 > f) return this;
                        d.splice(f, 1), 0 == d.length && delete this._events[a];
                    } else this._events[a] === c && delete this._events[a];
                    return this;
                }, d.prototype.removeAllListeners = function(a) {
                    return 0 === arguments.length ? (this._events = {}, this) : (a && this._events && this._events[a] && (this._events[a] = null), 
                    this);
                }, d.prototype.listeners = function(a) {
                    return this._events || (this._events = {}), this._events[a] || (this._events[a] = []), 
                    e(this._events[a]) || (this._events[a] = [ this._events[a] ]), this._events[a];
                };
            }(a("__browserify_process"));
        }, {
            __browserify_process: 6
        } ],
        3: [ function(a, b, c) {
            var d, e, f, g, h, i = Object.prototype.hasOwnProperty, j = function(a, b) {
                function c() {
                    this.constructor = a;
                }
                for (var d in b) i.call(b, d) && (a[d] = b[d]);
                return c.prototype = b.prototype, a.prototype = new c(), a.__super__ = b.prototype, 
                a;
            };
            e = a("./client.coffee"), h = a("./util.coffee"), f = a("./creative.coffee").VASTCreativeLinear, 
            d = a("events").EventEmitter, g = function(a) {
                function b(a, b) {
                    var c, d, g;
                    this.ad = a, this.creative = b, this.muted = !1, this.impressed = !1, this.skipable = !1, 
                    this.skipDelayDefault = -1, this.trackingEvents = {}, this.emitAlwaysEvents = [ "creativeView", "start", "firstQuartile", "midpoint", "thirdQuartile", "complete", "rewind", "skip", "closeLinear", "close" ], 
                    g = b.trackingEvents;
                    for (c in g) d = g[c], this.trackingEvents[c] = d.slice(0);
                    b instanceof f ? (this.assetDuration = b.duration, this.quartiles = {
                        firstQuartile: Math.round(25 * this.assetDuration) / 100,
                        midpoint: Math.round(50 * this.assetDuration) / 100,
                        thirdQuartile: Math.round(75 * this.assetDuration) / 100
                    }, this.skipDelay = b.skipDelay, this.linear = !0, this.clickThroughURLTemplate = b.videoClickThroughURLTemplate, 
                    this.clickTrackingURLTemplate = b.videoClickTrackingURLTemplate) : (this.skipDelay = -1, 
                    this.linear = !1), this.on("start", function() {
                        e.lastSuccessfullAd = +new Date();
                    });
                }
                return j(b, a), b.prototype.setProgress = function(a) {
                    var b, c, d, e, f, g, h, i, j;
                    if (f = null === this.skipDelay ? this.skipDelayDefault : this.skipDelay, -1 === f || this.skipable || (f > a ? this.emit("skip-countdown", f - a) : (this.skipable = !0, 
                    this.emit("skip-countdown", 0))), this.linear && this.assetDuration > 0) {
                        if (c = [], a > 0 && 100 >= a) {
                            c.push("start"), d = Math.round(a / this.assetDuration * 100), c.push("progress-" + d + "%"), 
                            j = this.quartiles;
                            for (e in j) g = j[e], a >= g && g + 1 >= a && c.push(e);
                        }
                        for (h = 0, i = c.length; i > h; h++) b = c[h], this.track(b, !0);
                        a < this.progress && this.track("rewind");
                    }
                    return this.progress = a;
                }, b.prototype.setMuted = function(a) {
                    return this.muted !== a && this.track(a ? "muted" : "unmuted"), this.muted = a;
                }, b.prototype.setPaused = function(a) {
                    return this.paused !== a && this.track(a ? "pause" : "resume"), this.paused = a;
                }, b.prototype.setFullscreen = function(a) {
                    return this.fullscreen !== a && this.track(a ? "fullscreen" : "exitFullscreen"), 
                    this.fullscreen = a;
                }, b.prototype.setSkipDelay = function(a) {
                    return "number" == typeof a ? this.skipDelay = a : void 0;
                }, b.prototype.load = function() {
                    return this.impressed ? void 0 : (this.impressed = !0, this.trackURLs(this.ad.impressionURLTemplates), 
                    this.track("creativeView"));
                }, b.prototype.errorWithCode = function(a) {
                    return this.trackURLs(this.ad.errorURLTemplates, {
                        ERRORCODE: a
                    });
                }, b.prototype.complete = function() {
                    return this.track("complete");
                }, b.prototype.stop = function() {
                    return this.track(this.linear ? "closeLinear" : "close");
                }, b.prototype.skip = function() {
                    return this.track("skip"), this.trackingEvents = [];
                }, b.prototype.click = function() {
                    var a, b;
                    return null != this.clickTrackingURLTemplate && this.trackURLs([ this.clickTrackingURLTemplate ]), 
                    null != this.clickThroughURLTemplate ? (this.linear && (b = {
                        CONTENTPLAYHEAD: this.progressFormated()
                    }), a = h.resolveURLTemplates([ this.clickThroughURLTemplate ], b)[0], this.emit("clickthrough", a)) : void 0;
                }, b.prototype.track = function(a, b) {
                    var c, d;
                    null == b && (b = !1), "closeLinear" === a && null == this.trackingEvents[a] && null != this.trackingEvents.close && (a = "close"), 
                    d = this.trackingEvents[a], c = this.emitAlwaysEvents.indexOf(a), null != d ? (this.emit(a, ""), 
                    this.trackURLs(d)) : -1 !== c && this.emit(a, ""), b === !0 && (delete this.trackingEvents[a], 
                    c > -1 && this.emitAlwaysEvents.splice(c, 1));
                }, b.prototype.trackURLs = function(a, b) {
                    return null == b && (b = {}), this.linear && (b.CONTENTPLAYHEAD = this.progressFormated()), 
                    h.track(a, b);
                }, b.prototype.progressFormated = function() {
                    var a, b, c, d, e;
                    return e = parseInt(this.progress), a = e / 3600, a.length < 2 && (a = "0" + a), 
                    b = e / 60 % 60, b.length < 2 && (b = "0" + b), d = e % 60, d.length < 2 && (d = "0" + b), 
                    c = parseInt(100 * (this.progress - e)), "" + a + ":" + b + ":" + d + "." + c;
                }, b;
            }(d), b.exports = g;
        }, {
            events: 7,
            "./client.coffee": 2,
            "./util.coffee": 5,
            "./creative.coffee": 8
        } ],
        4: [ function(a, b, c) {
            var d, e, f, g, h, i, j, k = Array.prototype.indexOf || function(a) {
                for (var b = 0, c = this.length; c > b; b++) if (b in this && this[b] === a) return b;
                return -1;
            };
            d = a("./urlhandler.coffee"), i = a("./response.coffee"), e = a("./ad.coffee"), 
            j = a("./util.coffee"), f = a("./creative.coffee").VASTCreativeLinear, g = a("./mediafile.coffee"), 
            h = function() {
                function a() {}
                var b;
                return b = [], a.addURLTemplateFilter = function(a) {
                    "function" == typeof a && b.push(a);
                }, a.removeURLTemplateFilter = function() {
                    return b.pop();
                }, a.countURLTemplateFilters = function() {
                    return b.length;
                }, a.clearUrlTemplateFilters = function() {
                    return b = [];
                }, a.parse = function(a, b) {
                    return this._parse(a, null, function(a, c) {
                        return b(c);
                    });
                }, a._parse = function(a, c, e) {
                    var f, g, h, l = this;
                    for (g = 0, h = b.length; h > g; g++) f = b[g], a = f(a);
                    return null == c && (c = []), c.push(a), d.get(a, function(b, d) {
                        var f, g, h, m, n, o, p, q, r, s, t;
                        if (null != b) return e(b);
                        if (n = new i(), null == (null != d ? d.documentElement : void 0) || "VAST" !== d.documentElement.nodeName) return e();
                        for (s = d.documentElement.childNodes, o = 0, q = s.length; q > o; o++) m = s[o], 
                        "Error" === m.nodeName && n.errorURLTemplates.push(m.textContent);
                        for (t = d.documentElement.childNodes, p = 0, r = t.length; r > p; p++) m = t[p], 
                        "Ad" === m.nodeName && (f = l.parseAdElement(m), null != f ? n.ads.push(f) : j.track(n.errorURLTemplates, {
                            ERRORCODE: 101
                        }));
                        for (g = function() {
                            var a, b, c, d;
                            if (n) {
                                for (d = n.ads, b = 0, c = d.length; c > b; b++) if (a = d[b], null != a.nextWrapperURL) return;
                                return 0 === n.ads.length && (j.track(n.errorURLTemplates, {
                                    ERRORCODE: 303
                                }), n = null), e(null, n);
                            }
                        }, h = n.ads.length; h--; ) f = n.ads[h], null != f.nextWrapperURL && !function(b) {
                            var d, e;
                            return c.length >= 10 || (e = b.nextWrapperURL, k.call(c, e) >= 0) ? (j.track(b.errorURLTemplates, {
                                ERRORCODE: 302
                            }), n.ads.splice(n.ads.indexOf(b), 1), void g()) : (-1 === b.nextWrapperURL.indexOf("://") && (d = a.slice(0, a.lastIndexOf("/")), 
                            b.nextWrapperURL = "" + d + "/" + b.nextWrapperURL), l._parse(b.nextWrapperURL, c, function(a, c) {
                                var d, e, f, h, i, k, l, m, o, p, q, r, s, t;
                                if (null != a) j.track(b.errorURLTemplates, {
                                    ERRORCODE: 301
                                }), n.ads.splice(n.ads.indexOf(b), 1); else if (null == c) j.track(b.errorURLTemplates, {
                                    ERRORCODE: 303
                                }), n.ads.splice(n.ads.indexOf(b), 1); else for (n.errorURLTemplates = n.errorURLTemplates.concat(c.errorURLTemplates), 
                                f = n.ads.indexOf(b), n.ads.splice(f, 1), r = c.ads, k = 0, l = r.length; l > k; k++) {
                                    if (h = r[k], h.errorURLTemplates = b.errorURLTemplates.concat(h.errorURLTemplates), 
                                    h.impressionURLTemplates = b.impressionURLTemplates.concat(h.impressionURLTemplates), 
                                    null != b.trackingEvents) for (s = h.creatives, p = 0, m = s.length; m > p; p++) for (d = s[p], 
                                    t = Object.keys(b.trackingEvents), q = 0, o = t.length; o > q; q++) e = t[q], (i = d.trackingEvents)[e] || (i[e] = []), 
                                    d.trackingEvents[e] = d.trackingEvents[e].concat(b.trackingEvents[e]);
                                    n.ads.splice(f, 0, h);
                                }
                                return delete b.nextWrapperURL, g();
                            }));
                        }(f);
                        return g();
                    });
                }, a.childByName = function(a, b) {
                    var c, d, e, f;
                    for (f = a.childNodes, d = 0, e = f.length; e > d; d++) if (c = f[d], c.nodeName === b) return c;
                }, a.childsByName = function(a, b) {
                    var c, d, e, f, g;
                    for (d = [], g = a.childNodes, e = 0, f = g.length; f > e; e++) c = g[e], c.nodeName === b && d.push(c);
                    return d;
                }, a.parseAdElement = function(a) {
                    var b, c, d, e;
                    for (e = a.childNodes, c = 0, d = e.length; d > c; c++) {
                        if (b = e[c], "Wrapper" === b.nodeName) return this.parseWrapperElement(b);
                        if ("InLine" === b.nodeName) return this.parseInLineElement(b);
                    }
                }, a.parseWrapperElement = function(a) {
                    var b, c, d;
                    return b = this.parseInLineElement(a), d = this.childByName(a, "VASTAdTagURI"), 
                    null != d && (b.nextWrapperURL = d.textContent), c = b.creatives[0], null != c && null != c.trackingEvents && (b.trackingEvents = c.trackingEvents), 
                    null != b.nextWrapperURL ? b : void 0;
                }, a.parseInLineElement = function(a) {
                    var b, c, d, f, g, h, i, j, k, l, m, n, o, p;
                    for (b = new e(), n = a.childNodes, h = 0, k = n.length; k > h; h++) switch (g = n[h], 
                    g.nodeName) {
                      case "Error":
                        b.errorURLTemplates.push(g.textContent);
                        break;

                      case "Impression":
                        b.impressionURLTemplates.push(g.textContent);
                        break;

                      case "Creatives":
                        for (o = this.childsByName(g, "Creative"), i = 0, l = o.length; l > i; i++) for (d = o[i], 
                        p = d.childNodes, j = 0, m = p.length; m > j; j++) switch (f = p[j], f.nodeName) {
                          case "Linear":
                            c = this.parseCreativeLinearElement(f), c && b.creatives.push(c);
                        }
                    }
                    return b;
                }, a.parseCreativeLinearElement = function(a) {
                    var b, c, d, e, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D;
                    if (b = new f(), b.duration = this.parseDuration(null != (x = this.childByName(a, "Duration")) ? x.textContent : void 0), 
                    -1 === b.duration && "Wrapper" !== a.parentNode.parentNode.parentNode.nodeName) return null;
                    for (j = a.getAttribute("skipoffset"), null == j ? b.skipDelay = null : "%" === j.charAt(j.length - 1) ? (i = parseInt(j, 10), 
                    b.skipDelay = b.duration * (i / 100)) : b.skipDelay = this.parseDuration(j), n = this.childByName(a, "VideoClicks"), 
                    null != n && (b.videoClickThroughURLTemplate = null != (y = this.childByName(n, "ClickThrough")) ? y.textContent : void 0, 
                    b.videoClickTrackingURLTemplate = null != (z = this.childByName(n, "ClickTracking")) ? z.textContent : void 0), 
                    A = this.childsByName(a, "TrackingEvents"), p = 0, t = A.length; t > p; p++) for (l = A[p], 
                    B = this.childsByName(l, "Tracking"), q = 0, u = B.length; u > q; q++) k = B[q], 
                    c = k.getAttribute("event"), m = k.textContent, null != c && null != m && (null == (o = b.trackingEvents)[c] && (o[c] = []), 
                    b.trackingEvents[c].push(m));
                    for (C = this.childsByName(a, "MediaFiles"), r = 0, v = C.length; v > r; r++) for (h = C[r], 
                    D = this.childsByName(h, "MediaFile"), s = 0, w = D.length; w > s; s++) e = D[s], 
                    d = new g(), d.fileURL = e.textContent, d.deliveryType = e.getAttribute("delivery"), 
                    d.codec = e.getAttribute("codec"), d.mimeType = e.getAttribute("type"), d.bitrate = parseInt(e.getAttribute("bitrate") || 0), 
                    d.minBitrate = parseInt(e.getAttribute("minBitrate") || 0), d.maxBitrate = parseInt(e.getAttribute("maxBitrate") || 0), 
                    d.width = parseInt(e.getAttribute("width") || 0), d.height = parseInt(e.getAttribute("height") || 0), 
                    b.mediaFiles.push(d);
                    return b;
                }, a.parseDuration = function(a) {
                    var b, c, d, e, f;
                    return null == a ? -1 : (b = a.split(":"), 3 !== b.length ? -1 : (f = b[2].split("."), 
                    e = parseInt(f[0]), 2 === f.length && (e += parseFloat("0." + f[1])), d = parseInt(60 * b[1]), 
                    c = parseInt(60 * b[0] * 60), isNaN(c || isNaN(d || isNaN(e || d > 3600 || e > 60))) ? -1 : c + d + e));
                }, a;
            }(), b.exports = h;
        }, {
            "./urlhandler.coffee": 9,
            "./response.coffee": 10,
            "./ad.coffee": 11,
            "./util.coffee": 5,
            "./creative.coffee": 8,
            "./mediafile.coffee": 12
        } ],
        8: [ function(a, b, c) {
            var d, e, f, g, h = Object.prototype.hasOwnProperty, i = function(a, b) {
                function c() {
                    this.constructor = a;
                }
                for (var d in b) h.call(b, d) && (a[d] = b[d]);
                return c.prototype = b.prototype, a.prototype = new c(), a.__super__ = b.prototype, 
                a;
            };
            d = function() {
                function a() {
                    this.trackingEvents = {};
                }
                return a;
            }(), f = function(a) {
                function b() {
                    b.__super__.constructor.apply(this, arguments), this.type = "linear", this.duration = 0, 
                    this.skipDelay = null, this.mediaFiles = [], this.videoClickThroughURLTemplate = null, 
                    this.videoClickTrackingURLTemplate = null;
                }
                return i(b, a), b;
            }(d), g = function(a) {
                function b() {
                    b.__super__.constructor.apply(this, arguments);
                }
                return i(b, a), b;
            }(d), e = function(a) {
                function b() {
                    b.__super__.constructor.apply(this, arguments);
                }
                return i(b, a), b;
            }(d), b.exports = {
                VASTCreativeLinear: f,
                VASTCreativeNonLinear: g,
                VASTCreativeCompanion: e
            };
        }, {} ],
        11: [ function(a, b, c) {
            var d;
            d = function() {
                function a() {
                    this.errorURLTemplates = [], this.impressionURLTemplates = [], this.creatives = [];
                }
                return a;
            }(), b.exports = d;
        }, {} ],
        10: [ function(a, b, c) {
            var d;
            d = function() {
                function a() {
                    this.ads = [], this.errorURLTemplates = [];
                }
                return a;
            }(), b.exports = d;
        }, {} ],
        12: [ function(a, b, c) {
            var d;
            d = function() {
                function a() {
                    this.fileURL = null, this.deliveryType = "progressive", this.mimeType = null, this.codec = null, 
                    this.bitrate = 0, this.minBitrate = 0, this.maxBitrate = 0, this.width = 0, this.height = 0;
                }
                return a;
            }(), b.exports = d;
        }, {} ],
        9: [ function(a, b, c) {
            var d, e, f;
            f = a("./urlhandlers/xmlhttprequest.coffee"), e = a("./urlhandlers/flash.coffee"), 
            d = function() {
                function b() {}
                return b.get = function(b, c) {
                    return "undefined" == typeof window || null === window ? a("./urlhandlers/node.coffee").get(b, c) : f.supported() ? f.get(b, c) : e.get(b, c);
                }, b;
            }(), b.exports = d;
        }, {
            "./urlhandlers/xmlhttprequest.coffee": 13,
            "./urlhandlers/flash.coffee": 14
        } ],
        14: [ function(a, b, c) {
            var d;
            d = function() {
                function a() {}
                return a.get = function(a, b) {
                    return b("not supported");
                }, a;
            }(), b.exports = d;
        }, {} ],
        13: [ function(a, b, c) {
            var d;
            d = function() {
                function a() {}
                return a.xhr = function() {
                    var a;
                    return a = new window.XMLHttpRequest(), "withCredentials" in a ? a : void 0;
                }, a.supported = function() {
                    return !!this.xhr();
                }, a.get = function(a, b) {
                    var c;
                    return c = this.xhr(), c.open("GET", a), c.send(), c.onreadystatechange = function() {
                        return 4 === c.readyState ? b(null, c.responseXML) : void 0;
                    };
                }, a;
            }(), b.exports = d;
        }, {} ]
    }, {}, [ 1 ])(1);
}), function(a, b) {
    "use strict";
    var c = function(a) {
        var b, c, d;
        for (c = 1; c < arguments.length; c++) {
            b = arguments[c];
            for (d in b) b.hasOwnProperty(d) && (a[d] = b[d]);
        }
        return a;
    }, d = {
        skip: 5
    }, e = function(a) {
        var e = this, f = c({}, d, a || {});
        return void 0 === e.ads ? void console.log("VAST requires videojs-contrib-ads") : void 0 === f.url ? void e.trigger("adtimeout") : (e.on("contentupdate", function() {
            e.vast.getContent(e.q.change === !1 ? f.url : "/vast.xml");
        }), e.on("readyforpreroll", function() {
            e.vast.preroll();
        }), e.vast.getContent = function(a) {
            b.client.get(a, function(a) {
                if (a) for (var c = 0; c < a.ads.length; c++) {
                    for (var d = a.ads[c], f = 0; f < d.creatives.length; f++) {
                        var g = d.creatives[f];
                        if ("linear" === g.type && g.mediaFiles.length) {
                            e.vast.sources = e.vast.createSourceObjects(g.mediaFiles), e.vastTracker = new b.tracker(d, g), 
                            e.on("canplay", function() {
                                this.vastTracker.load();
                            }), e.on("timeupdate", function() {
                                isNaN(this.vastTracker.assetDuration) && (this.vastTracker.assetDuration = this.duration()), 
                                this.vastTracker.setProgress(this.currentTime());
                            }), e.on("play", function() {
                                this.vastTracker.setPaused(!1);
                            }), e.on("pause", function() {
                                this.vastTracker.setPaused(!0);
                            });
                            break;
                        }
                    }
                    if (e.vastTracker) {
                        e.trigger("adsready");
                        break;
                    }
                    b.util.track(d.errorURLTemplates, {
                        ERRORCODE: 403
                    });
                }
                e.vastTracker || e.trigger("adtimeout");
            });
        }, e.vast.preroll = function() {
            e.ads.startLinearAdMode(), e.autoplay(!0);
            var a = e.vast.sources;
            e.src(a);
            var c = b.util.resolveURLTemplates([ e.vastTracker.clickThroughURLTemplate ], {
                CONTENTPLAYHEAD: e.vastTracker.progressFormated()
            })[0], d = document.createElement("a");
            d.className = "vast-blocker", d.href = c, d.target = "_blank", d.onclick = function() {
                var a = e.vastTracker.clickTrackingURLTemplate;
                a && e.vastTracker.trackURLs(a);
            }, e.vast.blocker = d, e.el().insertBefore(d, e.controlBar.el());
            var f = document.createElement("div");
            f.className = "vast-skip-button", e.vast.skipButton = f, e.el().appendChild(f), 
            e.on("timeupdate", e.vast.timeupdate), f.onclick = function(a) {
                return (" " + e.vast.skipButton.className + " ").indexOf(" enabled ") >= 0 && e.vast.tearDown(), 
                void 0 === Event.prototype.stopPropagation ? !1 : void a.stopPropagation();
            }, e.one("ended", e.vast.tearDown);
        }, e.vast.tearDown = function() {
            e.vast.skipButton.parentNode.removeChild(e.vast.skipButton), e.vast.blocker.parentNode.removeChild(e.vast.blocker), 
            e.off("timeupdate", e.vast.timeupdate), e.off("ended", e.vast.tearDown), e.ads.endLinearAdMode();
        }, e.vast.timeupdate = function(a) {
            e.loadingSpinner.el().style.display = "none";
            var b = Math.ceil(f.skip - e.currentTime());
            b > 0 ? (e.vast.skipButton.innerHTML = "<span class='skip-text'>Skip in " + b + "...</span>", 
            e.vast.skipButton.setAttribute("data-text", b)) : -1 === (" " + e.vast.skipButton.className + " ").indexOf(" enabled ") && (e.vast.skipButton.className += " enabled", 
            e.vast.skipButton.innerHTML = "<span class='skip-text'>Đã xem</span>", e.vast.skipButton.setAttribute("data-text", "Đã xem"));
        }, void (e.vast.createSourceObjects = function(a) {
            for (var b = {}, c = [ "video/mp4", "video/webm", "video/ogv" ], d = 0; d < a.length; d++) {
                var e = a[d].fileURL, f = a[d].mimeType;
                c.indexOf(f) >= 0 && void 0 === b[f] && (b[f] = e);
            }
            for (var g = [], h = 0; h < c.length; h++) {
                var i = c[h];
                void 0 !== b[i] && g.push({
                    type: i,
                    src: b[i]
                });
            }
            return g;
        }));
    };
    a.plugin("vast", e);
}(window.videojs, window.DMVAST), $(function() {
    $(document).on("contextmenu", "#kitesPlayer_html5_api", function() {
        return !1;
    }), $(document).on("click", ".kites-quality", function() {
        $(this).toggleClass("active");
    });
}), ga("create", "UA-51952357-7", "www.kites.vn", {
    name: "kitesPlayer"
});

var not_the_first_time = !1;

KitesVIDEO.play_time = 0, KitesVIDEO.play = {
    time: 0,
    error: 0,
    loadeddata: !1,
    time: 0,
    timeoutfnc: !1,
    type: "ads"
}, KitesVIDEO.id = "kitesPlayer", _log = console.log, console.error = function(a) {
    console.log(arguments);
}, console.warn = function() {
    return "";
}, console.info = function() {
    return "";
}, console.debug = function() {
    return "";
}, console.memory = function() {
    return "";
};

var _speed = 0, _date = new Date();

KitesVIDEO.program.autoplay ? speedCheck() : $(".episode-player").click(function(a) {
    a.preventDefault(), speedCheck(), $(this).off("click");
});
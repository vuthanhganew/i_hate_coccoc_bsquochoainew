function getEpisode(a) {
    return $(a).parent().hasClass("page-active") ? !1 : (page = parseInt($(a).attr("href").substring(7)), 
    page = "NaN" == page ? 1 : page, sort = $("ul.list-sort li a").hasClass("active") ? $("ul.list-sort li a.active").attr("data-sort") : "lastest", 
    link = episode_ajax_url + "getepisode", data = {
        id: episode_id,
        page: page,
        sort: sort,
        "in": 0,
        programID: program_id
    }, void ajaxAction(link, data, "showEpisodeResult"));
}

function showEpisodeResult(a) {
    return $("input#search_by_episodenumber").removeAttr("disabled"), "" == a.content.text_view ? ($("div.episode-title span.episode-notice").html("Không có dữ liệu theo yêu cầu của bạn.").fadeIn(), 
    setTimeout(function() {
        $("div.episode-title span.episode-notice").fadeOut(500, function() {
            $(this).html(""), $("input#search_by_episodenumber").val("").focus();
        });
    }, 1500), !1) : ($("div.episode-textview ul, div.episode-thumbview ul").fadeOut(300), 
    $("div.episode-textview ul, div.episode-thumbview ul").fadeIn(300, function() {
        $("div.episode-textview ul").html(a.content.text_view), $("div.episode-thumbview ul").html(a.content.thumb_view), 
        in_ajax = !1;
    }), void ("" != a.page_data ? $("div.page-nav").html(a.page_data) : $("div.page-nav").html("")));
}

function showAdsBlock() {
    _ads.status = !1, 
    vivo_player()
}

function vivo_aplayer(a, b, c, d) {
    var e = !!window.opera || navigator.userAgent.indexOf(" OPR/") >= 0, f = (Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor") > 0, 
    !!window.chrome && !e, "direct");
    if (f = "transparent", "undefined" != typeof asiPlacements) {
        var g = "", h = "", i = "";
        "undefined" != typeof asiPlacements["986MKF"] && "undefined" != typeof asiPlacements["986MKF"]["default"] && (g = asiPlacements["986MKF"]["default"].key, 
        h = asiPlacements["986MKF"].blob, i = asiAdserver);
        for (var j in asiPlacements) {
            window["ASPQ_" + j] = "";
            for (var k in asiPlacements[j].data) window["ASPQ_" + j] += "PQ_" + j + "_" + k;
        }
    }
    _ads.pre_roll_1 = _ads.status ? _ads.pre_roll_1 + "&t=gwdadgroup%3D" + g + "%26gwdblob%3D" + h + "%26gwdadserver%3D" + i + "%26gwd%3D" + window.ASPQ_986MKF : "", 
    _ads.pre_roll_2 = _ads.mid_roll = _ads.status ? _ads.pre_roll_2 : "";
    var l = {
        file: encodeURIComponent(JSON.stringify(d)),
        autoPlay: !0
    }, m = {
        bgColor: "#000000",
        allowFullScreen: "true",
        allowScriptAccess: "always4",
        wmode: "direct"
    }, n = {
        name: "vivoPlayer",
        id: "vivoPlayer"
    };
    swfobject.embedSWF(a, b, "100%", "100%", "10.2.0", "scripts/expressInstall.swf", l, m, n), 
    _ads.status = !0;
}

var d = new Date();

$(document).ready(function() {
    $("ul.list-sort li a:not(.sort)").click(function() {
        return in_ajax ? !1 : $(this).hasClass("active") ? ($("ul.list-sort").removeClass("active"), 
        $("div.episode-title span.episode-notice").html("Bạn đang xem dữ liệu " + $(this).html()).fadeIn(), 
        setTimeout(function() {
            $("div.episode-title span.episode-notice").fadeOut(500, function() {
                $(this).html(""), $("input#search_by_episodenumber").val("").focus();
            });
        }, 1500), !1) : ($("ul.list-sort").removeClass("active"), $("ul.list-sort li a:not(.sort)").removeAttr("data-sort").removeClass("active"), 
        $(this).attr("data-sort", $(this).attr("class")).addClass("active"), $("ul.list-sort li a.sort").html("Sắp xếp: " + $(this).html()), 
        page = 0, sort = $(this).attr("data-sort"), link = episode_ajax_url + "getepisode", 
        in_page = 0, data = {
            id: episode_id,
            page: page,
            sort: sort,
            "in": in_page,
            programID: program_id
        }, ajaxAction(link, data, "showEpisodeResult"), in_page > 0 && (window.location.hash = "trang-" + data.page_current), 
        "mostview" == sort ? sort = "xem-nhieu-nhat" : "lastest" == sort ? sort = "moi-nhat" : "oldest" == sort ? sort = "cu-nhat" : "related" == sort ? sort = "videos-related" : sort = "moi-nhat", 
        void (window.location.hash = sort));
    }), $(document).on("click", "div.page-nav a", function(a) {
        return in_ajax ? !1 : (getEpisode(this), void a.preventDefault());
    });
    var a = -1;
    $("input#search_by_episodenumber").keypress(function(b) {
        var c = b.keyCode ? b.keyCode : b.which;
        if (13 == c) {
            if ($("input#search_by_episodenumber").attr("disabled", "disabled"), a == $("input:text[name=search_by_episodenumber]").val()) return $("div.episode-title span.episode-notice").html("Bạn đang xem danh sách tập " + a).fadeIn(), 
            setTimeout(function() {
                $("div.episode-title span.episode-notice").fadeOut(500, function() {
                    $(this).html(""), $("input#search_by_episodenumber").val("").focus().removeAttr("disabled");
                });
            }, 1500), !1;
            if (a = $("input:text[name=search_by_episodenumber]").val(), "" == a) return $("div.episode-title span.episode-notice").html("Nhập vào tập bao nhiêu để tìm bạn nhé!").fadeIn(), 
            setTimeout(function() {
                $("div.episode-title span.episode-notice").fadeOut(500, function() {
                    $(this).html(""), $("input#search_by_episodenumber").val("").focus().removeAttr("disabled");
                });
            }, 1500), !1;
            if (a = parseInt(a), typing && clearTimeout(typing), in_ajax) return !1;
            if (-1 >= a) return $("div.episode-title span.episode-notice").html("Nhập vào đúng tập để tìm bạn nhé.").fadeIn(), 
            setTimeout(function() {
                $("div.episode-title span.episode-notice").fadeOut(500, function() {
                    $(this).html(""), $("input#search_by_episodenumber").val("").focus().removeAttr("disabled");
                });
            }, 1500), !1;
            link = episode_ajax_url + "getepisodenumber", data = {
                id: episode_id,
                programID: program_id,
                number: a
            }, ajaxAction(link, data, "showEpisodeResult");
        } else typing && clearTimeout(typing), typing = setTimeout(function() {
            return a == $("input:text[name=search_by_episodenumber]").val() ? !1 : ($("input#search_by_episodenumber").attr("disabled", "disabled"), 
            a = $("input:text[name=search_by_episodenumber]").val(), "" == a ? ($("div.episode-title span.episode-notice").html("Nhập vào tập bao nhiêu để tìm bạn nhé.").fadeIn(), 
            setTimeout(function() {
                $("div.episode-title span.episode-notice").fadeOut(500, function() {
                    $(this).html(""), $("input#search_by_episodenumber").val("").focus().removeAttr("disabled");
                });
            }, 1500), !1) : (a = parseInt(a), typing && clearTimeout(typing), in_ajax ? !1 : -1 > a ? !1 : (link = episode_ajax_url + "getepisodenumber", 
            data = {
                id: episode_id,
                programID: program_id,
                number: a
            }, void ajaxAction(link, data, "showEpisodeResult"))));
        }, 2e3);
    }), top_banner = $(".contents").offset().top, $("#floating_banner_left, #floating_banner_right").css({
        "margin-top": "0px"
    }), $(".banner_g1").css({
        "text-align": "left"
    });
});

var ads_block_html = '<div class="tatquangcao" id="hidden" style="padding-top: 168px;z-index:999;left: 0;top: 0px;margin: 0px auto;background-color: rgba(0, 0, 0, 0.6);position: absolute;width: 100%;height: 100%;"><a style="" href="/blog/11153-tip-huong-dan-tat-adblock-de-thuong-thuc-noi-dung-tren-vivo.html" title="Click để biết thêm chi tiết." target="_blank"> <img style="" src="http://files.vivo.vn/skin/img/site/adsblock.jpg" /></a></div>';